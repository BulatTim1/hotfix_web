{"version":3,"sources":["../../../src/components/FixedLayout/FixedLayout.tsx"],"names":["FixedLayout","position","top","e","panelScroll","detail","scrolls","context","panel","setState","el","offsetTop","element","getRootRef","props","current","document","addEventListener","transitionStartEventName","onViewTransitionStart","transitionEndEventName","onViewTransitionEnd","removeEventListener","className","children","style","vertical","insets","platform","filled","restProps","tabbarPadding","hasTabbar","tabbarHeight","paddingBottom","bottom","getRef","state","React","Component","PropTypes","string","any","bool"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport PropTypes from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport { transitionEndEventName, transitionStartEventName } from '../View/View';\nimport { tabbarHeight } from '../../appearance/constants';\nimport withInsets from '../../hoc/withInsets';\nimport { isNumeric } from '../../lib/utils';\nimport { HasChildren, HasInsets, HasPlatform, HasRootRef } from '../../types/props';\nimport withPlatform from '../../hoc/withPlatform';\n\nexport interface FixedLayoutProps extends\n  HTMLAttributes<HTMLDivElement>,\n  HasChildren,\n  HasRootRef<HTMLDivElement>,\n  HasInsets,\n  HasPlatform\n{\n  vertical?: 'top' | 'bottom';\n  /**\n   * Это свойство определяет, будет ли фон компонента окрашен в цвет фона контента.\n   * Это часто необходимо для фиксированных кнопок в нижней части экрана.\n   */\n  filled?: boolean;\n}\n\nexport interface FixedLayoutState {\n  position: 'absolute' | null;\n  top: number;\n}\n\nclass FixedLayout extends React.Component<FixedLayoutProps, FixedLayoutState> {\n  state = {\n    position: null,\n    top: null\n  };\n\n  el: HTMLDivElement\n\n  static contextTypes = {\n    panel: PropTypes.string,\n    document: PropTypes.any,\n    hasTabbar: PropTypes.bool\n  };\n\n  get document () {\n    return this.context.document || document;\n  }\n\n  componentDidMount () {\n    this.document.addEventListener(transitionStartEventName, this.onViewTransitionStart);\n    this.document.addEventListener(transitionEndEventName, this.onViewTransitionEnd);\n  }\n\n  componentWillUnmount () {\n    this.document.removeEventListener(transitionStartEventName, this.onViewTransitionStart);\n    this.document.removeEventListener(transitionEndEventName, this.onViewTransitionEnd);\n  }\n\n  onViewTransitionStart = (e) => {\n    let panelScroll = e.detail.scrolls[this.context.panel] || 0;\n    this.setState({\n      position: 'absolute',\n      top: this.el.offsetTop + panelScroll\n    });\n  };\n\n  onViewTransitionEnd = () => {\n    this.setState({\n      position: null,\n      top: null\n    });\n  };\n\n  getRef = (element) => {\n    this.el = element;\n\n    const getRootRef = this.props.getRootRef;\n    if (getRootRef) {\n      if (typeof getRootRef === 'function') {\n        getRootRef(element);\n      } else {\n        getRootRef.current = element;\n      }\n    }\n  };\n\n  render () {\n    const { className, children, style, vertical, getRootRef, insets, platform, filled, ...restProps } = this.props;\n    const tabbarPadding = this.context.hasTabbar ? tabbarHeight : 0;\n    const paddingBottom = vertical === 'bottom' && isNumeric(insets.bottom) ? insets.bottom + tabbarPadding : null;\n\n    return (\n      <div\n        {...restProps}\n        ref={this.getRef}\n        className={classNames(getClassName('FixedLayout', platform), {\n          'FixedLayout--filled': filled\n        }, `FixedLayout--${vertical}`, className)}\n        style={{ ...style, ...this.state, paddingBottom }}\n      >\n        <div className=\"FixedLayout__in\">{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(withInsets(FixedLayout));\n"],"file":"FixedLayout.js"}