{"version":3,"sources":["../../../src/components/Div/Div.tsx"],"names":["Div","className","children","getRootRef","restProps","platform"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAKO,IAAMA,GAAgC,GAAG,SAAnCA,GAAmC,OAAiE;AAAA,MAA9DC,SAA8D,QAA9DA,SAA8D;AAAA,MAAnDC,QAAmD,QAAnDA,QAAmD;AAAA,MAAzCC,UAAyC,QAAzCA,UAAyC;AAAA,MAA1BC,SAA0B;AAC/G,MAAMC,QAAQ,GAAG,2BAAjB;AACA,SACE,+DAASD,SAAT;AAAoB,IAAA,GAAG,EAAED,UAAzB;AAAqC,IAAA,SAAS,EAAE,yBAAW,2BAAa,KAAb,EAAoBE,QAApB,CAAX,EAA0CJ,SAA1C;AAAhD,MACGC,QADH,CADF;AAKD,CAPM;;;eASQF,G","sourcesContent":["import React, { HTMLAttributes, FunctionComponent } from 'react';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport usePlatform from '../../hooks/usePlatform';\nimport { HasChildren, HasRootRef } from '../../types/props';\n\nexport interface DivProps extends HTMLAttributes<HTMLDivElement>, HasRootRef<HTMLDivElement>, HasChildren {}\n\nexport const Div: FunctionComponent<DivProps> = ({ className, children, getRootRef, ...restProps }: DivProps) => {\n  const platform = usePlatform();\n  return (\n    <div {...restProps} ref={getRootRef} className={classNames(getClassName('Div', platform), className)}>\n      {children}\n    </div>\n  );\n};\n\nexport default Div;\n"],"file":"Div.js"}