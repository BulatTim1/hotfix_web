{"version":3,"sources":["../../../src/components/Tabbar/Tabbar.tsx"],"names":["Tabbar","props","className","children","shadow","itemsLayout","platform","insets","getItemsLayout","React","Children","count","paddingBottom","bottom","defaultProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAUA,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,CAACC,KAAD,EAAwB;AAAA,MAC7DC,SAD6D,GAChBD,KADgB,CAC7DC,SAD6D;AAAA,MAClDC,QADkD,GAChBF,KADgB,CAClDE,QADkD;AAAA,MACxCC,MADwC,GAChBH,KADgB,CACxCG,MADwC;AAAA,MAChCC,WADgC,GAChBJ,KADgB,CAChCI,WADgC;AAErE,MAAMC,QAAQ,GAAG,2BAAjB;AACA,MAAMC,MAAM,GAAG,yBAAf;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,YAAQH,WAAR;AACE,WAAK,YAAL;AACA,WAAK,UAAL;AACE,eAAOA,WAAP;;AACF;AACE,eAAOI,eAAMC,QAAN,CAAeC,KAAf,CAAqBR,QAArB,IAAiC,CAAjC,GAAqC,UAArC,GAAkD,YAAzD;AALJ;AAOD,GARD;;AAUA,SACE;AACE,IAAA,SAAS,EAAE,yBAAW,2BAAa,QAAb,EAAuBG,QAAvB,CAAX,EAA6CJ,SAA7C,sBAAqEM,cAAc,EAAnF,GAAyF;AAClG,wBAAkBJ;AADgF,KAAzF,CADb;AAIE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,aAAa,EAAE,sBAAUL,MAAM,CAACM,MAAjB,IAA2BN,MAAM,CAACM,MAAlC,GAA2C;AAA5D;AAJT,KAMGV,QANH,CADF;AAUD,CAzBD;;AA2BAH,MAAM,CAACc,YAAP,GAAsB;AACpBV,EAAAA,MAAM,EAAE;AADY,CAAtB;eAIeJ,M","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { isNumeric } from '../../lib/utils';\nimport usePlatform from '../../hooks/usePlatform';\nimport { HasChildren, HasClassName } from '../../types/props';\nimport useInsets from '../../hooks/useInsets';\n\nexport interface TabbarProps extends HasChildren, HasClassName {\n  /**\n   * Флаг для показа/скрытия верхней тени (Android) или границы (iOS)\n   */\n  shadow?: boolean;\n  itemsLayout?: 'vertical' | 'horizontal' | 'auto';\n}\n\nconst Tabbar: FunctionComponent<TabbarProps> = (props: TabbarProps) => {\n  const { className, children, shadow, itemsLayout } = props;\n  const platform = usePlatform();\n  const insets = useInsets();\n\n  const getItemsLayout = () => {\n    switch (itemsLayout) {\n      case 'horizontal':\n      case 'vertical':\n        return itemsLayout;\n      default:\n        return React.Children.count(children) > 2 ? 'vertical' : 'horizontal';\n    }\n  };\n\n  return (\n    <div\n      className={classNames(getClassName('Tabbar', platform), className, `Tabbar--l-${getItemsLayout()}`, {\n        'Tabbar--shadow': shadow\n      })}\n      style={{ paddingBottom: isNumeric(insets.bottom) ? insets.bottom : null }}\n    >\n      {children}\n    </div>\n  );\n};\n\nTabbar.defaultProps = {\n  shadow: true\n};\n\nexport default Tabbar;\n"],"file":"Tabbar.js"}