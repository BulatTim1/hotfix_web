{"version":3,"sources":["../../../src/components/RangeSlider/RangeSlider.js"],"names":["baseClassNames","RangeSlider","e","absolutePosition","validateAbsolute","startX","state","containerLeft","percentPosition","absoluteToPecent","percentRange","calcPercentRange","onChange","percentToValue","isControlledOutside","setState","thumb","originalEvent","target","closest","thumbStart","active","thumbEnd","shiftX","preventDefault","percent","percentStart","percentEnd","Math","abs","valueStart","valueEnd","window","addEventListener","onResize","validatePercent","valueToPercent","value","nextProps","props","className","min","max","step","defaultValue","getRootRef","restProps","getRef","onStart","onMoveX","onEnd","width","left","el","hasOwnProperty","Slider","propTypes","PropTypes","arrayOf","number","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,cAAc,GAAG,2BAAa,QAAb,CAAvB;;IAEqBC,W;;;;;;;;;;;;;;;;;0FAST,UAAAC,CAAC,EAAI;AACb,UAAMC,gBAAgB,GAAG,MAAKC,gBAAL,CAAsBF,CAAC,CAACG,MAAF,GAAW,MAAKC,KAAL,CAAWC,aAA5C,CAAzB;;AACA,UAAMC,eAAe,GAAG,MAAKC,gBAAL,CAAsBN,gBAAtB,CAAxB;;AACA,UAAMO,YAAY,GAAG,MAAKC,gBAAL,CAAsBH,eAAtB,CAArB;;AAEA,YAAKI,QAAL,CAAc,MAAKC,cAAL,CAAoBH,YAApB,CAAd,EAAiDR,CAAjD;;AAEA,UAAI,MAAKY,mBAAT,EAA8B;AAC5B,cAAKC,QAAL,CAAc;AAAEV,UAAAA,MAAM,EAAEF;AAAV,SAAd;AACD,OAFD,MAEO;AACL,cAAKY,QAAL;AACEV,UAAAA,MAAM,EAAEF;AADV,WAEKO,YAFL;AAID;;AAED,UAAMM,KAAK,GAAGd,CAAC,CAACe,aAAF,CAAgBC,MAAhB,CAAuBC,OAAvB,CAA+B,gBAA/B,CAAd;;AAEA,UAAIH,KAAK,KAAK,MAAKI,UAAnB,EAA+B;AAC7B,cAAKL,QAAL,CAAc;AAAEM,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD,OAFD,MAEO,IAAIL,KAAK,KAAK,MAAKM,QAAnB,EAA6B;AAClC,cAAKP,QAAL,CAAc;AAAEM,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF,K;0FAES,UAAAnB,CAAC,EAAI;AACb,UAAMC,gBAAgB,GAAG,MAAKC,gBAAL,CAAsB,MAAKE,KAAL,CAAWD,MAAX,IAAqBH,CAAC,CAACqB,MAAF,IAAY,CAAjC,CAAtB,CAAzB;;AACA,UAAMf,eAAe,GAAG,MAAKC,gBAAL,CAAsBN,gBAAtB,CAAxB;;AACA,UAAMO,YAAY,GAAG,MAAKC,gBAAL,CAAsBH,eAAtB,CAArB;;AAEA,YAAKI,QAAL,CAAc,MAAKC,cAAL,CAAoBH,YAApB,CAAd,EAAiDR,CAAjD;;AAEA,UAAI,CAAC,MAAKY,mBAAV,EAA+B;AAC7B,cAAKC,QAAL,CAAcL,YAAd;AACD;;AAEDR,MAAAA,CAAC,CAACe,aAAF,CAAgBO,cAAhB;AACD,K;;;;;;qCAEiBC,O,EAAS;AAAA,wBACY,KAAKnB,KADjB;AAAA,UACjBoB,YADiB,eACjBA,YADiB;AAAA,UACHC,UADG,eACHA,UADG;;AAGzB,UAAID,YAAY,KAAK,GAArB,EAA0B;AACxB,eAAO;AAAEA,UAAAA,YAAY,EAAED,OAAhB;AAAyBE,UAAAA,UAAU,EAAVA;AAAzB,SAAP;AACD,OAFD,MAEO,IAAIA,UAAU,KAAK,CAAnB,EAAsB;AAC3B,eAAO;AAAEA,UAAAA,UAAU,EAAEF,OAAd;AAAuBC,UAAAA,YAAY,EAAZA;AAAvB,SAAP;AACD,OAFM,MAEA,IAAIE,IAAI,CAACC,GAAL,CAASH,YAAY,GAAGD,OAAxB,KAAoCG,IAAI,CAACC,GAAL,CAASF,UAAU,GAAGF,OAAtB,CAAxC,EAAwE;AAC7E,eAAO;AAAEC,UAAAA,YAAY,EAAED,OAAhB;AAAyBE,UAAAA,UAAU,EAAVA;AAAzB,SAAP;AACD,OAFM,MAEA;AACL,eAAO;AAAEA,UAAAA,UAAU,EAAEF,OAAd;AAAuBC,UAAAA,YAAY,EAAZA;AAAvB,SAAP;AACD;AACF;;;0CAE8C;AAAA,UAA5BA,YAA4B,QAA5BA,YAA4B;AAAA,UAAdC,UAAc,QAAdA,UAAc;AAC7C,aAAO;AACLD,QAAAA,YAAY,+GAAwBA,YAAxB,CADP;AAELC,QAAAA,UAAU,+GAAwBA,UAAxB;AAFL,OAAP;AAID;;;0CAE6C;AAAA,UAA5BD,YAA4B,SAA5BA,YAA4B;AAAA,UAAdC,UAAc,SAAdA,UAAc;AAC5C,aAAO,6GAAsBD,YAAtB,+GAA0DC,UAA1D,EAAP;AACD;;;0CAEuC;AAAA;AAAA,UAAvBG,UAAuB;AAAA,UAAXC,QAAW;;AACtC,aAAO;AACLL,QAAAA,YAAY,8GAAuBI,UAAvB,CADP;AAELH,QAAAA,UAAU,8GAAuBI,QAAvB;AAFL,OAAP;AAID;;;wCAYoB;AAAA;;AACnBC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,QAAvC;AACA,WAAKA,QAAL,CAAc,YAAM;AAClB,QAAA,MAAI,CAACnB,QAAL,CAAc,MAAI,CAACoB,eAAL,CAAqB,MAAI,CAACC,cAAL,CAAoB,MAAI,CAACC,KAAzB,CAArB,CAAd;AACD,OAFD;AAGD;;;8CAE0BC,S,EAAW;AACpC,UAAI,KAAKxB,mBAAL,IAA4BwB,SAAS,CAACD,KAAV,KAAoB,KAAKE,KAAL,CAAWF,KAA/D,EAAsE;AACpE,aAAKtB,QAAL,CAAc,KAAKoB,eAAL,CAAqB,KAAKC,cAAL,CAAoBE,SAAS,CAACD,KAA9B,CAArB,CAAd;AACD;AACF;;;6BAES;AAAA;;AAAA,wBACuF,KAAKE,KAD5F;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,GADX,eACWA,GADX;AAAA,UACgBC,GADhB,eACgBA,GADhB;AAAA,UACqBC,IADrB,eACqBA,IADrB;AAAA,UAC2BN,KAD3B,eAC2BA,KAD3B;AAAA,UACkCO,YADlC,eACkCA,YADlC;AAAA,UACgDhC,QADhD,eACgDA,QADhD;AAAA,UAC0DiC,UAD1D,eAC0DA,UAD1D;AAAA,UACyEC,SADzE;AAGR,aACE,+DAASA,SAAT;AAAoB,QAAA,SAAS,EAAE,yBAAW9C,cAAX,EAA2BwC,SAA3B,CAA/B;AAAsE,QAAA,GAAG,EAAE,KAAKO;AAAhF,UACE,6BAAC,cAAD;AAAO,QAAA,OAAO,EAAE,KAAKC,OAArB;AAA8B,QAAA,OAAO,EAAE,KAAKC,OAA5C;AAAqD,QAAA,KAAK,EAAE,KAAKC,KAAjE;AAAwE,QAAA,SAAS,EAAC;AAAlF,SACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWqB,UAAX,GAAwB,KAAKrB,KAAL,CAAWoB,YAAnC,GAAkD,GADpD;AAEL0B,UAAAA,IAAI,EAAE,KAAK9C,KAAL,CAAWoB,YAAX,GAA0B;AAF3B;AAFT,SAOE;AACE,QAAA,SAAS,EAAE,yBAAW,eAAX,EAA4B,sBAA5B,EAAoD;AAC7D,mCAAyB,KAAKpB,KAAL,CAAWe,MAAX,KAAsB;AADc,SAApD,CADb;AAIE,QAAA,GAAG,EAAE,aAAAgC,EAAE;AAAA,iBAAI,MAAI,CAACjC,UAAL,GAAkBiC,EAAtB;AAAA;AAJT,QAPF,EAaE;AACE,QAAA,SAAS,EAAE,yBAAW,eAAX,EAA4B,oBAA5B,EAAkD;AAC3D,mCAAyB,KAAK/C,KAAL,CAAWe,MAAX,KAAsB;AADY,SAAlD,CADb;AAIE,QAAA,GAAG,EAAE,aAAAgC,EAAE;AAAA,iBAAI,MAAI,CAAC/B,QAAL,GAAgB+B,EAApB;AAAA;AAJT,QAbF,CADF,CADF,CADF;AA0BD;;;wBApDY;AACX,UAAI,KAAKvC,mBAAT,EAA8B;AAC5B,eAAO,KAAKyB,KAAL,CAAWF,KAAlB;AACD,OAFD,MAEO,IAAI,KAAKE,KAAL,CAAWe,cAAX,CAA0B,cAA1B,CAAJ,EAA+C;AACpD,eAAO,KAAKf,KAAL,CAAWK,YAAlB;AACD,OAFM,MAEA;AACL,eAAO,CAAC,KAAKL,KAAL,CAAWE,GAAZ,EAAiB,KAAKF,KAAL,CAAWG,GAA5B,CAAP;AACD;AACF;;;EAxFsCa,gB;;;8BAApBtD,W,iCAEdsD,iBAAOC,S;AACVnB,EAAAA,KAAK,EAAEoB,mBAAUC,OAAV,CAAkBD,mBAAUE,MAA5B,C;AACPf,EAAAA,YAAY,EAAEa,mBAAUC,OAAV,CAAkBD,mBAAUE,MAA5B;;8BAJG1D,W,kBAOGsD,iBAAOK,Y","sourcesContent":["import React from 'react';\nimport Touch from '../Touch/Touch';\nimport getClassName from '../../helpers/getClassName';\nimport Slider from '../Slider/Slider';\nimport PropTypes from 'prop-types';\nimport classNames from '../../lib/classNames';\n\nconst baseClassNames = getClassName('Slider');\n\nexport default class RangeSlider extends Slider {\n  static propTypes = {\n    ...Slider.propTypes,\n    value: PropTypes.arrayOf(PropTypes.number),\n    defaultValue: PropTypes.arrayOf(PropTypes.number)\n  };\n\n  static defaultProps = Slider.defaultProps;\n\n  onStart = e => {\n    const absolutePosition = this.validateAbsolute(e.startX - this.state.containerLeft);\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n    const percentRange = this.calcPercentRange(percentPosition);\n\n    this.onChange(this.percentToValue(percentRange), e);\n\n    if (this.isControlledOutside) {\n      this.setState({ startX: absolutePosition });\n    } else {\n      this.setState({\n        startX: absolutePosition,\n        ...percentRange\n      });\n    }\n\n    const thumb = e.originalEvent.target.closest('.Slider__thumb');\n\n    if (thumb === this.thumbStart) {\n      this.setState({ active: 'start' });\n    } else if (thumb === this.thumbEnd) {\n      this.setState({ active: 'end' });\n    }\n  };\n\n  onMoveX = e => {\n    const absolutePosition = this.validateAbsolute(this.state.startX + (e.shiftX || 0));\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n    const percentRange = this.calcPercentRange(percentPosition);\n\n    this.onChange(this.percentToValue(percentRange), e);\n\n    if (!this.isControlledOutside) {\n      this.setState(percentRange);\n    }\n\n    e.originalEvent.preventDefault();\n  };\n\n  calcPercentRange (percent) {\n    const { percentStart, percentEnd } = this.state;\n\n    if (percentStart === 100) {\n      return { percentStart: percent, percentEnd };\n    } else if (percentEnd === 0) {\n      return { percentEnd: percent, percentStart };\n    } else if (Math.abs(percentStart - percent) <= Math.abs(percentEnd - percent)) {\n      return { percentStart: percent, percentEnd };\n    } else {\n      return { percentEnd: percent, percentStart };\n    }\n  }\n\n  validatePercent ({ percentStart, percentEnd }) {\n    return {\n      percentStart: super.validatePercent(percentStart),\n      percentEnd: super.validatePercent(percentEnd)\n    };\n  }\n\n  percentToValue ({ percentStart, percentEnd }) {\n    return [super.percentToValue(percentStart), super.percentToValue(percentEnd)];\n  }\n\n  valueToPercent ([valueStart, valueEnd]) {\n    return {\n      percentStart: super.valueToPercent(valueStart),\n      percentEnd: super.valueToPercent(valueEnd)\n    };\n  }\n\n  get value () {\n    if (this.isControlledOutside) {\n      return this.props.value;\n    } else if (this.props.hasOwnProperty('defaultValue')) {\n      return this.props.defaultValue;\n    } else {\n      return [this.props.min, this.props.max];\n    }\n  }\n\n  componentDidMount () {\n    window.addEventListener('resize', this.onResize);\n    this.onResize(() => {\n      this.setState(this.validatePercent(this.valueToPercent(this.value)));\n    });\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.isControlledOutside && nextProps.value !== this.props.value) {\n      this.setState(this.validatePercent(this.valueToPercent(nextProps.value)));\n    }\n  }\n\n  render () {\n    const { className, min, max, step, value, defaultValue, onChange, getRootRef, ...restProps } = this.props;\n\n    return (\n      <div {...restProps} className={classNames(baseClassNames, className)} ref={this.getRef}>\n        <Touch onStart={this.onStart} onMoveX={this.onMoveX} onEnd={this.onEnd} className=\"Slider__in\">\n          <div\n            className=\"Slider__dragger\"\n            style={{\n              width: this.state.percentEnd - this.state.percentStart + '%',\n              left: this.state.percentStart + '%'\n            }}\n          >\n            <span\n              className={classNames('Slider__thumb', 'Slider__thumb--start', {\n                'Slider__thumb--active': this.state.active === 'start'\n              })}\n              ref={el => this.thumbStart = el}\n            />\n            <span\n              className={classNames('Slider__thumb', 'Slider__thumb--end', {\n                'Slider__thumb--active': this.state.active === 'end'\n              })}\n              ref={el => this.thumbEnd = el}\n            />\n          </div>\n        </Touch>\n      </div>\n    );\n  }\n}\n"],"file":"RangeSlider.js"}