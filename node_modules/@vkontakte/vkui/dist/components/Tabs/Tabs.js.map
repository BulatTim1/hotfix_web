{"version":3,"sources":["../../../src/components/Tabs/Tabs.js"],"names":["baseClassName","Tabs","props","className","children","theme","style","type","getRootRef","restProps","React","Component","PropTypes","node","string","oneOf","object","oneOfType","func","shape","current","any"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,aAAa,GAAG,2BAAa,MAAb,CAAtB;;IAEqBC,I;;;;;;;;;;;;6BAuCT;AAAA;;AAAA,wBACsE,KAAKC,KAD3E;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,QADX,eACWA,QADX;AAAA,UACqBC,KADrB,eACqBA,KADrB;AAAA,UAC4BC,KAD5B,eAC4BA,KAD5B;AAAA,UACmCC,IADnC,eACmCA,IADnC;AAAA,UACyCC,UADzC,eACyCA,UADzC;AAAA,UACwDC,SADxD;AAGR,aACE,+DAASA,SAAT;AAAoB,QAAA,GAAG,EAAED,UAAzB;AAAqC,QAAA,SAAS,EAAE,0BAAWR,aAAX,gFACpC,KAAKK,KAD+B,GACrB,IADqB,8DAEpCE,IAFoC,GAE3B,IAF2B,iBAG7CJ,SAH6C,CAAhD;AAGe,QAAA,KAAK,EAAEG;AAHtB,UAG8BF,QAH9B,CADF;AAMD;;;;AAxBD;;;;wBAIa;AACX,cAAQ,KAAKF,KAAL,CAAWG,KAAnB;AACE,aAAK,OAAL;AACE,iBAAO,QAAP;;AACF,aAAK,MAAL;AACE,iBAAO,OAAP;;AACF;AACE,iBAAO,KAAKH,KAAL,CAAWG,KAAlB;AANJ;AAQD;;;EArC+BK,eAAMC,S;;;8BAAnBV,I,eACA;AACjBG,EAAAA,QAAQ,EAAEQ,mBAAUC,IADH;AAEjBV,EAAAA,SAAS,EAAES,mBAAUE,MAFJ;;AAGjB;;;AAGAT,EAAAA,KAAK,EAAEO,mBAAUG,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,CAAhB,CANU;;AAOjB;;;AAGAR,EAAAA,IAAI,EAAEK,mBAAUG,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB,CAVW;AAWjBT,EAAAA,KAAK,EAAEM,mBAAUI,MAXA;AAYjBR,EAAAA,UAAU,EAAEI,mBAAUK,SAAV,CAAoB,CAC9BL,mBAAUM,IADoB,EAE9BN,mBAAUO,KAAV,CAAgB;AAAEC,IAAAA,OAAO,EAAER,mBAAUS;AAArB,GAAhB,CAF8B,CAApB;AAZK,C;8BADApB,I,kBAmBG;AACpBI,EAAAA,KAAK,EAAE,OADa;AAEpBE,EAAAA,IAAI,EAAE;AAFc,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\n\nconst baseClassName = getClassName('Tabs');\n\nexport default class Tabs extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    /**\n     * Значения white и gray устарели. Они будут удалены в следующей мажорной версии\n     */\n    theme: PropTypes.oneOf(['light', 'header']),\n    /**\n     * Свойство отвечает за растягивание табов\n     */\n    type: PropTypes.oneOf(['default', 'buttons']),\n    style: PropTypes.object,\n    getRootRef: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.any })\n    ])\n  };\n\n  static defaultProps = {\n    theme: 'light',\n    type: 'default'\n  };\n\n  /**\n   * Метод нужен для маппинга устаревших значений theme на новые\n   * @returns {string}\n   */\n  get theme () {\n    switch (this.props.theme) {\n      case 'white':\n        return 'header';\n      case 'gray':\n        return 'light';\n      default:\n        return this.props.theme;\n    }\n  }\n\n  render () {\n    const { className, children, theme, style, type, getRootRef, ...restProps } = this.props;\n\n    return (\n      <div {...restProps} ref={getRootRef} className={classNames(baseClassName, {\n        [`Tabs--${this.theme}`]: true,\n        [`Tabs--${type}`]: true\n      }, className)} style={style}>{children}</div>\n    );\n  }\n}\n"],"file":"Tabs.js"}