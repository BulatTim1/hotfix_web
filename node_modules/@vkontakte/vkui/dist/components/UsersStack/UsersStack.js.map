{"version":3,"sources":["../../../src/components/UsersStack/UsersStack.tsx"],"names":["UsersStack","props","platform","className","photos","count","size","vertical","children","restProps","othersCount","Math","max","length","canShowOthers","photosShown","slice","map","photo","i","backgroundImage","defaultProps","React","memo"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AAsBA,IAAMA,UAAoD,GAAG,SAAvDA,UAAuD,CAACC,KAAD,EAA4B;AACvF,MAAMC,QAAQ,GAAG,2BAAjB;AADuF,MAE/EC,SAF+E,GAEVF,KAFU,CAE/EE,SAF+E;AAAA,MAEpEC,MAFoE,GAEVH,KAFU,CAEpEG,MAFoE;AAAA,MAE5DC,KAF4D,GAEVJ,KAFU,CAE5DI,KAF4D;AAAA,MAErDC,IAFqD,GAEVL,KAFU,CAErDK,IAFqD;AAAA,MAE/CC,QAF+C,GAEVN,KAFU,CAE/CM,QAF+C;AAAA,MAErCC,QAFqC,GAEVP,KAFU,CAErCO,QAFqC;AAAA,MAExBC,SAFwB,0CAEVR,KAFU;AAIvF,MAAMS,WAAW,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYR,MAAM,CAACS,MAAP,GAAgBR,KAA5B,CAApB;AACA,MAAMS,aAAa,GAAGJ,WAAW,GAAG,CAAd,IAAmBJ,IAAI,KAAK,GAAlD;AAEA,MAAMS,WAAW,GAAGX,MAAM,CAACY,KAAP,CAAa,CAAb,EAAgBX,KAAhB,CAApB;AAEA,SACE,+DAASI,SAAT;AAAoB,IAAA,SAAS,EAAE,yBAAW,2BAAa,YAAb,EAA2BP,QAA3B,CAAX,EAAiDC,SAAjD,EAA4D,sBAAsBG,IAAlF,EAAwF;AACrH,iCAA2BQ,aAD0F;AAErH,uBAAiBP;AAFoG,KAAxF;AAA/B,MAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGQ,WAAW,CAACE,GAAZ,CAAgB,UAACC,KAAD,EAAQC,CAAR;AAAA,WACf;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,gBAASF,KAAT;AAAjB;AAHT,MADe;AAAA,GAAhB,CADH,EASGJ,aAAa,IACd;AAAK,IAAA,SAAS,EAAC;AAAf,gBACOJ,WADP,EAVF,CAJF,EAkBGF,QAAQ,IACT;AAAK,IAAA,SAAS,EAAC;AAAf,KACGA,QADH,CAnBF,CADF;AA0BD,CAnCD;;AAqCAR,UAAU,CAACqB,YAAX,GAA0B;AACxBjB,EAAAA,MAAM,EAAE,EADgB;AAExBE,EAAAA,IAAI,EAAE,GAFkB;AAGxBD,EAAAA,KAAK,EAAE;AAHiB,CAA1B;;eAMeiB,eAAMC,IAAN,CAAWvB,UAAX,C","sourcesContent":["import React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { HasChildren } from '../../types/props';\nimport usePlatform from '../../hooks/usePlatform';\nimport { createMasks } from './masks';\n\ncreateMasks();\n\nexport interface UsersStackProps extends React.HTMLAttributes<HTMLDivElement>, HasChildren {\n  /**\n   * Массив ссылок на фотографии\n   */\n  photos?: string[],\n  /**\n   * Размер аватарок\n   */\n  size?: 's' | 'm',\n  /**\n   * Вертикальный режим. Рекомендуется использовать с размером `m`\n   */\n  vertical?: boolean,\n  /**\n   * Количество аватарок, которые будут показаны.\n   * Если в массиве `photos` больше элементов и используется размер `m`, то будет показано количество остальных элементов\n   */\n  count?: number,\n}\n\nconst UsersStack: React.FunctionComponent<UsersStackProps> = (props: UsersStackProps) => {\n  const platform = usePlatform();\n  const { className, photos, count, size, vertical, children, ...restProps } = props;\n\n  const othersCount = Math.max(0, photos.length - count);\n  const canShowOthers = othersCount > 0 && size === 'm';\n\n  const photosShown = photos.slice(0, count);\n\n  return (\n    <div {...restProps} className={classNames(getClassName('UsersStack', platform), className, 'UsersStack--size-' + size, {\n      'UsersStack--with-others': canShowOthers,\n      'UsersStack--v': vertical\n    })}>\n      <div className=\"UsersStack__photos\">\n        {photosShown.map((photo, i) => (\n          <div\n            key={i}\n            className=\"UsersStack__photo\"\n            style={{ backgroundImage: `url(${photo})` }}\n          />\n        ))}\n\n        {canShowOthers &&\n        <div className=\"UsersStack__photo UsersStack__photo--others\">\n          {`+${othersCount}`}\n        </div>}\n      </div>\n      {children &&\n      <div className=\"UsersStack__text\">\n        {children}\n      </div>\n      }\n    </div>\n  );\n};\n\nUsersStack.defaultProps = {\n  photos: [],\n  size: 's',\n  count: 3\n};\n\nexport default React.memo(UsersStack);\n"],"file":"UsersStack.js"}