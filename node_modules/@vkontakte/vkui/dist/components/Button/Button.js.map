{"version":3,"sources":["../../../src/components/Button/Button.tsx"],"names":["mapOldLevel","level","Button","props","platform","type","className","size","stretched","align","children","before","after","getRootRef","restProps","defaultProps","component","stopPropagation"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AA0BA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,UAAQA,KAAR;AACE,SAAK,GAAL;AACE,aAAO,SAAP;;AACF,SAAK,GAAL;AACE,aAAO,WAAP;;AACF,SAAK,GAAL;AACE,aAAO,UAAP;;AACF,SAAK,MAAL;AACE,aAAO,SAAP;;AACF,SAAK,KAAL;AACE,aAAO,UAAP;;AACF;AACE,aAAOA,KAAP;AAZJ;AAcD,CAfD;;AAiBA,IAAMC,MAAsC,GAAG,SAAzCA,MAAyC,CAACC,KAAD,EAAwB;AACrE,MAAMC,QAAQ,GAAG,2BAAjB;;AACA,MAAID,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,WAAO,6BAAC,mBAAD,6BAAgBF,KAAhB;AAAuB,MAAA,KAAK,EAAEA,KAAK,CAACF,KAAN,KAAgB,aAAhB,GAAgC,QAAhC,GAA2C;AAAzE,OAAP;AACD,GAFD,MAEO;AAAA;;AAAA,QACGK,SADH,GACyGH,KADzG,CACGG,SADH;AAAA,QACcC,IADd,GACyGJ,KADzG,CACcI,IADd;AAAA,QACoBN,KADpB,GACyGE,KADzG,CACoBF,KADpB;AAAA,QAC2BO,SAD3B,GACyGL,KADzG,CAC2BK,SAD3B;AAAA,QACsCC,KADtC,GACyGN,KADzG,CACsCM,KADtC;AAAA,QAC6CC,QAD7C,GACyGP,KADzG,CAC6CO,QAD7C;AAAA,QACuDC,MADvD,GACyGR,KADzG,CACuDQ,MADvD;AAAA,QAC+DC,KAD/D,GACyGT,KADzG,CAC+DS,KAD/D;AAAA,QACsEP,IADtE,GACyGF,KADzG,CACsEE,IADtE;AAAA,QAC4EQ,UAD5E,GACyGV,KADzG,CAC4EU,UAD5E;AAAA,QAC2FC,SAD3F,0CACyGX,KADzG;AAGL,WAAO,6BAAC,iBAAD,6BAAcW,SAAd;AAAyB,MAAA,SAAS,EAAE,0BAAW,2BAAa,QAAb,EAAuBV,QAAvB,CAAX,EAA6CE,SAA7C,qFAC1BC,IAD0B,GACjB,IADiB,oEAEzBP,WAAW,CAACC,KAAD,CAFc,GAEF,IAFE,oEAGzBQ,KAAK,IAAI,QAHgB,GAGH,IAHG,6DAIxBD,SAJwB,gBAApC;AAKH,MAAA,UAAU,EAAEK;AALT,QAML;AAAK,MAAA,SAAS,EAAC;AAAf,OACGF,MAAM,IAAI;AAAK,MAAA,SAAS,EAAC;AAAf,OAAiCA,MAAjC,CADb,EAEGD,QAAQ,IAAI;AAAK,MAAA,SAAS,EAAC;AAAf,OAAkCA,QAAlC,CAFf,EAGGE,KAAK,IAAI;AAAK,MAAA,SAAS,EAAC;AAAf,OAAgCA,KAAhC,CAHZ,CANK,CAAP;AAYD;AACF,CApBD;;AAsBAV,MAAM,CAACa,YAAP,GAAsB;AACpBd,EAAAA,KAAK,EAAE,SADa;AAEpBI,EAAAA,IAAI,EAAE,SAFc;AAGpBW,EAAAA,SAAS,EAAE,QAHS;AAIpBT,EAAAA,IAAI,EAAE,GAJc;AAKpBC,EAAAA,SAAS,EAAE,KALS;AAMpBS,EAAAA,eAAe,EAAE;AANG,CAAtB;eASef,M","sourcesContent":["import React, { FunctionComponent, HTMLAttributes, ReactNode, ComponentType } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport Tappable from '../Tappable/Tappable';\nimport CellButton from '../CellButton/CellButton';\nimport { HasChildren, HasRootRef } from '../../types/props';\nimport usePlatform from '../../hooks/usePlatform';\n\nexport interface ButtonProps extends HTMLAttributes<HTMLElement>, HasChildren, HasRootRef<HTMLElement> {\n  /**\n   * Значения `1`, `2`, `3`, `sell`, `buy` устарели. Маппинг на новые значения находится в\n   * статическом методе `Button.mapOldLevel(level)`. Старые значения будут удалены в 3.0.0\n   */\n  level?: 'primary' | 'secondary' | 'tertiary' | 'outline' | 'commerce' | 'destructive' | 'overlay_primary' | 'overlay_secondary' | 'overlay_outline' | '1' | '2' | '3' | 'sell' | 'buy',\n  size?: 'm' | 'l' | 'xl',\n  /**\n   * @deprecated Кнопки-ячейки `<Button type=\"cell\" />` переехали в отдельный компонент: `<CellButton />`.\n   * Свойство `type` будет удалено в 3.0.0\n   */\n  type?: 'default' | 'cell',\n  align?: 'left' | 'center' | 'right',\n  stretched?: boolean,\n  before?: ReactNode;\n  after?: ReactNode;\n  component?: string | ComponentType;\n  stopPropagation?: boolean;\n  /**\n   * @ignore\n   */\n  disabled?: boolean;\n}\n\nconst mapOldLevel = level => {\n  switch (level) {\n    case '1':\n      return 'primary';\n    case '2':\n      return 'secondary';\n    case '3':\n      return 'tertiary';\n    case 'sell':\n      return 'outline';\n    case 'buy':\n      return 'commerce';\n    default:\n      return level;\n  }\n};\n\nconst Button: FunctionComponent<ButtonProps> = (props: ButtonProps) => {\n  const platform = usePlatform();\n  if (props.type === 'cell') {\n    return <CellButton {...props} level={props.level === 'destructive' ? 'danger' : 'primary'}/>;\n  } else {\n    const { className, size, level, stretched, align, children, before, after, type, getRootRef, ...restProps } = props;\n\n    return <Tappable {...restProps} className={classNames(getClassName('Button', platform), className, {\n      [`Button--sz-${size}`]: true,\n      [`Button--lvl-${mapOldLevel(level)}`]: true,\n      [`Button--aln-${align || 'center'}`]: true,\n      [`Button--str`]: stretched\n    })} getRootRef={getRootRef}>\n      <div className=\"Button__in\">\n        {before && <div className=\"Button__before\">{before}</div>}\n        {children && <div className=\"Button__content\">{children}</div>}\n        {after && <div className=\"Button__after\">{after}</div>}\n      </div>\n    </Tappable>;\n  }\n};\n\nButton.defaultProps = {\n  level: 'primary',\n  type: 'default',\n  component: 'button',\n  size: 'm',\n  stretched: false,\n  stopPropagation: true\n};\n\nexport default Button;\n"],"file":"Button.js"}