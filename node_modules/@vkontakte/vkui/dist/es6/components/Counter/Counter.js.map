{"version":3,"sources":["../../../../src/components/Counter/Counter.tsx"],"names":["React","classNames","getClassName","baseClassName","Counter","props","type","children","defaultProps","memo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAGA,IAAMC,aAAa,GAAGD,YAAY,CAAC,SAAD,CAAlC;;AASA,IAAME,OAA8C,GAAG,SAAjDA,OAAiD,CAACC,KAAD,EAAyB;AAAA,MACtEC,IADsE,GACnDD,KADmD,CACtEC,IADsE;AAAA,MAChEC,QADgE,GACnDF,KADmD,CAChEE,QADgE;AAG9E,SACE;AAAK,IAAA,SAAS,EAAEN,UAAU,CAACE,aAAD,qBAA4BG,IAA5B;AAA1B,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGC,QADH,CADF,CADF;AAOD,CAVD;;AAYAH,OAAO,CAACI,YAAR,GAAuB;AACrBF,EAAAA,IAAI,EAAE;AADe,CAAvB;AAIA,eAAeN,KAAK,CAACS,IAAN,CAAWL,OAAX,CAAf","sourcesContent":["import React from 'react';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport { HasChildren } from '../../types/props';\n\nconst baseClassName = getClassName('Counter');\n\nexport interface CounterProps extends HasChildren {\n  /**\n   * Тип счетчика. При использовании компонента в качестве значения свойства `after` у `Button` эти значения игнорируются\n   */\n  type?: 'secondary' | 'primary' | 'prominent'\n}\n\nconst Counter: React.FunctionComponent<CounterProps> = (props: CounterProps) => {\n  const { type, children } = props;\n\n  return (\n    <div className={classNames(baseClassName, `Counter--${type}`)}>\n      <div className=\"Counter__in\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nCounter.defaultProps = {\n  type: 'secondary'\n};\n\nexport default React.memo(Counter);\n"],"file":"Counter.js"}