{"version":3,"sources":["../../../../src/components/ConfigProvider/ConfigProvider.tsx"],"names":["React","PropTypes","vkConnect","canUseDOM","ConfigProvider","props","context","document","window","body","setAttribute","scheme","prevProps","isWebView","webviewType","app","children","Component","bool","string","oneOf","object"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,SAASC,SAAT,QAA0B,eAA1B;;IASqBC,c;;;;;AACnB,0BAAaC,KAAb,EAAoBC,OAApB,EAA6B;AAAA;;AAAA;;AAC3B,wFAAMD,KAAN;;AACA,QAAIF,SAAJ,EAAe;AACb,OAACG,OAAO,CAACC,QAAR,IAAoBC,MAAM,CAACD,QAA5B,EAAsCE,IAAtC,CAA2CC,YAA3C,CAAwD,QAAxD,EAAkEL,KAAK,CAACM,MAAxE;AACD;;AAJ0B;AAK5B;;;;uCAuBkBC,S,EAAW;AAC5B,UAAIA,SAAS,CAACD,MAAV,KAAqB,KAAKN,KAAL,CAAWM,MAApC,EAA4C;AAC1C,aAAKJ,QAAL,CAAcE,IAAd,CAAmBC,YAAnB,CAAgC,QAAhC,EAA0C,KAAKL,KAAL,CAAWM,MAArD;AACD;AACF;;;sCAEsC;AACrC,aAAO;AACLE,QAAAA,SAAS,EAAE,KAAKR,KAAL,CAAWQ,SADjB;AAELC,QAAAA,WAAW,EAAE,KAAKT,KAAL,CAAWS,WAFnB;AAGLH,QAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWM,MAHd;AAILI,QAAAA,GAAG,EAAE,KAAKV,KAAL,CAAWU;AAJX,OAAP;AAMD;;;6BAEQ;AACP,aAAO,KAAKV,KAAL,CAAWW,QAAlB;AACD;;;wBArBc;AACb,aAAO,KAAKV,OAAL,CAAaC,QAAb,IAAyBC,MAAM,CAACD,QAAvC;AACD;;;;EA3ByCP,KAAK,CAACiB,S;;gBAA7Bb,c,uBAQQ;AACzBS,EAAAA,SAAS,EAAEZ,SAAS,CAACiB,IADI;AAEzBP,EAAAA,MAAM,EAAEV,SAAS,CAACkB,MAFO;AAGzBL,EAAAA,WAAW,EAAEb,SAAS,CAACmB,KAAV,CAAgB,CAAC,QAAD,EAAW,UAAX,CAAhB,CAHY;AAIzBL,EAAAA,GAAG,EAAEd,SAAS,CAACkB;AAJU,C;;gBARRf,c,kBAeG;AACpBU,EAAAA,WAAW,EAAE,UADO;AAEpBD,EAAAA,SAAS,EAAEX,SAAS,CAACW,SAAV,EAFS;AAGpBF,EAAAA,MAAM,EAAE;AAHY,C;;gBAfHP,c,kBAqBG;AACpBG,EAAAA,QAAQ,EAAEN,SAAS,CAACoB;AADA,C;;SArBHjB,c","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport vkConnect from '@vkontakte/vk-connect';\nimport { HasChildren } from '../../types/props';\nimport { canUseDOM } from '../../lib/dom';\n\nexport interface ConfigProviderProps extends HasChildren {\n  scheme?: 'client_light' | 'client_dark' | 'bright_light' | 'space_gray',\n  isWebView?: boolean,\n  webviewType?: 'vkapps' | 'internal',\n  app?: string\n}\n\nexport default class ConfigProvider extends React.Component<ConfigProviderProps> {\n  constructor (props, context) {\n    super(props);\n    if (canUseDOM) {\n      (context.document || window.document).body.setAttribute('scheme', props.scheme);\n    }\n  }\n\n  static childContextTypes = {\n    isWebView: PropTypes.bool,\n    scheme: PropTypes.string,\n    webviewType: PropTypes.oneOf(['vkapps', 'internal']),\n    app: PropTypes.string\n  };\n\n  static defaultProps = {\n    webviewType: 'internal',\n    isWebView: vkConnect.isWebView(),\n    scheme: 'client_light'\n  };\n\n  static contextTypes = {\n    document: PropTypes.object\n  };\n\n  get document() {\n    return this.context.document || window.document;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.scheme !== this.props.scheme) {\n      this.document.body.setAttribute('scheme', this.props.scheme);\n    }\n  }\n\n  getChildContext(): ConfigProviderProps {\n    return {\n      isWebView: this.props.isWebView,\n      webviewType: this.props.webviewType,\n      scheme: this.props.scheme,\n      app: this.props.app\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n"],"file":"ConfigProvider.js"}