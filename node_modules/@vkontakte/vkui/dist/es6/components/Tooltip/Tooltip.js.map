{"version":3,"sources":["../../../../src/components/Tooltip/Tooltip.js"],"names":["React","PropTypes","classNames","getClassName","ReactDOM","isElement","element","isValidElement","isDOMTypeElement","type","baseClassName","TooltipPortal","x","y","findPortalTarget","el","target","props","closestFixed","closest","closestHeader","closestPanel","document","getElementById","context","panel","childNodes","fixedPortal","targetBounds","getBoundingClientRect","portalBounds","portalTarget","width","height","left","top","removeEventListener","onClose","offsetY","offsetX","alignX","alignY","coords","getBoundingTargetRect","addEventListener","setState","offsetWidth","offsetHeight","title","text","cornerOffset","createPortal","state","getRef","Component","object","node","oneOf","number","func","isRequired","any","string","Tooltip","ready","targetEl","children","isShown","portalProps","child","cloneElement","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport ReactDOM from 'react-dom';\n\nconst isElement = element => React.isValidElement(element);\nconst isDOMTypeElement = element => isElement(element) && typeof element.type === 'string';\nconst baseClassName = getClassName('Tooltip');\n\nclass TooltipPortal extends React.Component {\n  static propTypes = {\n    target: PropTypes.object,\n    text: PropTypes.node,\n    title: PropTypes.node,\n    alignX: PropTypes.oneOf(['left', 'right']),\n    alignY: PropTypes.oneOf(['top', 'bottom']),\n    offsetX: PropTypes.number,\n    offsetY: PropTypes.number,\n    cornerOffset: PropTypes.number,\n    onClose: PropTypes.func.isRequired\n  };\n\n  static contextTypes = {\n    document: PropTypes.any,\n    panel: PropTypes.string\n  };\n\n  state = {\n    x: 0,\n    y: 0\n  };\n\n  get document () {\n    return this.context.document || document;\n  }\n\n  fixedPortal = false;\n\n  portalTarget = this.findPortalTarget();\n\n  findPortalTarget () {\n    const { target } = this.props;\n    const closestFixed = target.closest('.FixedLayout');\n    const closestHeader = target.closest('.PanelHeader__in');\n    const closestPanel = this.document.getElementById(this.context.panel).childNodes[0];\n\n    if (closestFixed || closestHeader) {\n      this.fixedPortal = true;\n    }\n\n    return closestFixed || closestHeader || closestPanel;\n  }\n\n  getBoundingTargetRect () {\n    const { target } = this.props;\n    const targetBounds = target.getBoundingClientRect();\n    const portalBounds = this.portalTarget.getBoundingClientRect();\n\n    return {\n      width: targetBounds.width,\n      height: targetBounds.height,\n      x: targetBounds.left - portalBounds.left,\n      y: targetBounds.top - portalBounds.top\n    };\n  }\n\n  componentWillUnmount () {\n    this.document.removeEventListener('click', this.props.onClose);\n  }\n\n  componentDidMount () {\n    const { offsetY, offsetX, alignX, alignY } = this.props;\n    const coords = this.getBoundingTargetRect();\n\n    this.document.addEventListener('click', this.props.onClose);\n\n    this.setState({\n      x: coords.x + offsetX + (alignX === 'right' ? coords.width - this.el.offsetWidth : 0),\n      y: coords.y + (alignY === 'top' ? -this.el.offsetHeight - offsetY : coords.height + offsetY)\n    });\n  }\n\n  getRef = el => this.el = el;\n\n  render () {\n    const { title, text, alignX, alignY, cornerOffset } = this.props;\n\n    return ReactDOM.createPortal(\n      <div className={classNames(baseClassName, {\n        [`Tooltip--x-${alignX}`]: true,\n        [`Tooltip--y-${alignY}`]: true,\n        'Tooltip--fixed': this.fixedPortal\n      })}>\n        <div className=\"Tooltip__container\" style={{ top: this.state.y, left: this.state.x }} ref={this.getRef}>\n          <div className=\"Tooltip__corner\" style={{ [alignX]: 20 + cornerOffset }}/>\n          <div className=\"Tooltip__content\">\n            {title && <div className=\"Tooltip__title\">{title}</div>}\n            {text && <div className=\"Tooltip__text\">{text}</div>}\n          </div>\n        </div>\n      </div>, this.portalTarget);\n  }\n}\n\nexport default class Tooltip extends React.Component {\n  static propTypes = {\n    /**\n     * **Важно**: если в `children` передан React-компонент, то необходимо убедиться в том, что он поддерживает\n     * свойство `getRootRef`, которое должно возвращаться ссылку на корневой DOM-элемент компонента,\n     * иначе тултип показан не будет. Если передан React-element, то такой проблемы нет.\n     */\n    children: PropTypes.node.isRequired,\n    /**\n     * Если передан `false`, то рисуется просто `children`.\n     */\n    isShown: PropTypes.bool.isRequired,\n    /**\n     * Текст тултипа.\n     */\n    text: PropTypes.node,\n    /**\n     * Заголовок тултипа.\n     */\n    title: PropTypes.node,\n    /**\n     * Положение по горизонтали (прижатие к левому или правому краю `children`).\n     */\n    alignX: PropTypes.oneOf(['left', 'right']),\n    /**\n     * Положение по вертикали (расположение над или под `children`).\n     */\n    alignY: PropTypes.oneOf(['top', 'bottom']),\n    /**\n     * Сдвиг по горизонтали (относительно портала, в котором рисуется тултип).\n     */\n    offsetX: PropTypes.number,\n    /**\n     * Сдвиг по вертикали (относительно портала, в котором рисуется тултип).\n     */\n    offsetY: PropTypes.number,\n    /**\n     * Сдвиг треугольника (относительно ширины тултипа).\n     */\n    cornerOffset: PropTypes.number,\n    /**\n     * Callback, который вызывается при клике по любому месту в пределах экрана.\n     */\n    onClose: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    offsetX: 0,\n    offsetY: 15,\n    alignX: 'left',\n    alignY: 'bottom',\n    cornerOffset: 0,\n    isShown: true\n  };\n\n  state = {\n    ready: false\n  };\n\n  componentDidMount () {\n    this.targetEl && this.setState({ ready: true });\n  }\n\n  getRef = el => this.targetEl = el;\n\n  render () {\n    const { children, isShown, ...portalProps } = this.props;\n\n    const child = React.cloneElement(children, {\n      [isDOMTypeElement(children) ? 'ref' : 'getRootRef']: this.getRef, key: 'c'\n    });\n\n    if (!isShown || !this.state.ready) {\n      return child;\n    }\n\n    return [child, <TooltipPortal {...portalProps} target={this.targetEl} key=\"t\" />];\n  }\n}\n"],"file":"Tooltip.js"}