{"version":3,"sources":["../../../../src/components/Snackbar/Snackbar.tsx"],"names":["React","PureComponent","PropTypes","withPlatform","FixedLayout","Touch","classNames","getClassname","canUseDOM","transitionEvents","ANDROID","rubber","Snackbar","props","closeTimeout","window","setTimeout","close","duration","clearTimeout","e","action","onActionClick","el","innerEl","clearCloseTimeout","event","shiftX","startT","originalEvent","preventDefault","state","touched","setState","shiftXPercent","innerWidth","shiftXCurrent","platform","touchStartTime","setBodyTransform","newState","callback","shiftXReal","expectTranslateY","Date","now","waitTransitionFinish","bodyElRef","current","onClose","setCloseTimeout","closing","createRef","element","eventHandler","eventName","transitionEndEventName","removeEventListener","addEventListener","percent","cancelAnimationFrame","animationFrame","requestAnimationFrame","style","transform","children","className","layout","before","after","resolvedLayout","getInnerRef","onTouchStart","onTouchMoveX","onTouchEnd","context","any","document"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport withPlatform from '../../hoc/withPlatform';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport Touch from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport { HasChildren, HasClassName, HasPlatform } from '../../types/props';\nimport getClassname from '../../helpers/getClassName';\nimport { canUseDOM } from '../../lib/dom';\nimport transitionEvents from '../../lib/transitionEvents';\nimport { ANDROID } from '../../lib/platform';\nimport { rubber } from '../../lib/touch';\n\nexport interface SnackbarProps extends HasChildren, HasClassName, HasPlatform {\n  /**\n   * Название кнопки действия в уведомлении\n   */\n  action?: string | React.ComponentType;\n\n  /**\n   * Будет вызвано при клике на кнопку действия\n   */\n  onActionClick?: (e: Event) => {};\n\n  /**\n   * Цветная иконка 24x24 пикселя\n   */\n  before?: React.ComponentType;\n  /**\n   * Контент в правой части, может быть `<Avatar size={32} />`\n   */\n  after?: React.ComponentType;\n  /**\n   * Варианты расположения кнопки\n   */\n  layout?: 'vertical' | 'horizontal',\n  /**\n   * Время в миллисекундах, через которое плашка скроется\n   */\n  duration?: number;\n  /**\n   * Обработчик закрытия уведомления\n   */\n  onClose: () => {};\n}\n\nexport interface SnackbarState {\n  closing: boolean,\n  touched: boolean\n}\n\nclass Snackbar extends PureComponent<SnackbarProps, SnackbarState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      closing: false,\n      touched: false\n    };\n\n    this.bodyElRef = React.createRef();\n\n    this.shiftXPercent = 0;\n    this.shiftXCurrent = 0;\n    this.touchStartTime = 0;\n  }\n\n  static defaultProps = {\n    duration: 4000\n  };\n\n  static contextTypes = {\n    window: PropTypes.any,\n    document: PropTypes.any\n  };\n\n  private innerEl: HTMLDivElement;\n  private bodyElRef: React.RefObject<HTMLDivElement>;\n  private closeTimeout: number;\n\n  private shiftXPercent: number;\n  private shiftXCurrent: number;\n  private touchStartTime: number;\n  private animationFrame: number;\n\n  componentDidMount() {\n    this.setCloseTimeout();\n  }\n\n  componentWillUnmount() {\n    this.clearCloseTimeout();\n  }\n\n  get window () {\n    return this.context.window || window;\n  }\n\n  setCloseTimeout = () => {\n    if (canUseDOM) {\n      this.closeTimeout = window.setTimeout(() => {\n        this.close();\n      }, this.props.duration);\n    }\n  };\n\n  clearCloseTimeout = () => {\n    clearTimeout(this.closeTimeout);\n  };\n\n  onActionClick = (e) => {\n    this.close();\n\n    if (this.props.action && typeof this.props.onActionClick === 'function') {\n      this.props.onActionClick(e);\n    }\n  };\n\n  close() {\n    this.setState({ closing: true });\n    this.waitTransitionFinish(this.innerEl, () => {\n      this.props.onClose();\n    });\n  }\n\n  waitTransitionFinish(element: HTMLElement, eventHandler) {\n    if (element) {\n      const eventName = transitionEvents.transitionEndEventName;\n\n      element.removeEventListener(eventName, eventHandler);\n      element.addEventListener(eventName, eventHandler);\n    }\n  }\n\n  getInnerRef = (el) => this.innerEl = el;\n\n  onTouchStart = () => {\n    this.clearCloseTimeout();\n  };\n\n  onTouchMoveX = (event) => {\n    const { shiftX, startT, originalEvent } = event;\n    originalEvent.preventDefault();\n\n    if (!this.state.touched) {\n      this.setState({ touched: true });\n    }\n\n    this.shiftXPercent = shiftX / this.window.innerWidth * 100;\n    this.shiftXCurrent = rubber(this.shiftXPercent, 72, 1.2, this.props.platform === ANDROID);\n    this.touchStartTime = startT;\n\n    this.setBodyTransform(this.shiftXCurrent);\n  };\n\n  onTouchEnd = () => {\n    const newState = {\n      touched: false\n    };\n\n    let callback;\n\n    if (this.state.touched) {\n      let shiftXReal = this.shiftXCurrent;\n      const expectTranslateY = (shiftXReal / (Date.now() - this.touchStartTime) * 240 * 0.6) * (this.shiftXPercent < 0 ? -1 : 1);\n      shiftXReal = shiftXReal + expectTranslateY;\n\n      if (shiftXReal >= 50) {\n        this.clearCloseTimeout();\n        this.waitTransitionFinish(this.bodyElRef.current, () => {\n          this.props.onClose();\n        });\n        this.setBodyTransform(120);\n      } else {\n        callback = () => {\n          this.setCloseTimeout();\n          this.setBodyTransform(0);\n        };\n      }\n    } else {\n      this.setCloseTimeout();\n    }\n\n    this.setState(newState, callback);\n  };\n\n  setBodyTransform(percent: number) {\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = requestAnimationFrame(() => {\n      this.bodyElRef.current.style.transform = `translate3d(${percent}%, 0, 0)`;\n    });\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      platform,\n      layout,\n      action,\n      before,\n      after\n    } = this.props;\n\n    const resolvedLayout = after ? 'vertical' : layout;\n\n    return (\n      <FixedLayout\n        vertical=\"bottom\"\n        className={classNames(getClassname('Snackbar', platform), className, `Snackbar--l-${resolvedLayout}`, {\n          'Snackbar--closing': this.state.closing,\n          'Snackbar--touched': this.state.touched\n        })}\n      >\n        <Touch\n          className=\"Snackbar__in\"\n          getRootRef={this.getInnerRef}\n          onStart={this.onTouchStart}\n          onMoveX={this.onTouchMoveX}\n          onEnd={this.onTouchEnd}\n        >\n          <div className=\"Snackbar__body\" ref={this.bodyElRef}>\n            {before &&\n            <div className=\"Snackbar__before\">\n              {before}\n            </div>}\n\n            <div className=\"Snackbar__content\">\n              <div className=\"Snackbar__content-text\">{children}</div>\n\n              {action &&\n              <button className=\"Snackbar__action\" onClick={this.onActionClick}>\n                <div className=\"Snackbar__action-self\">{action}</div>\n              </button>}\n            </div>\n\n            {after &&\n            <div className=\"Snackbar__after\">\n              {after}\n            </div>}\n          </div>\n        </Touch>\n      </FixedLayout>\n    );\n  }\n}\n\nexport default withPlatform(Snackbar);\n"],"file":"Snackbar.js"}