{"version":3,"sources":["../../../../src/components/HeaderContext/HeaderContext.js"],"names":["React","Component","PropTypes","FixedLayout","classNames","getClassName","transitionEvents","baseClassNames","HeaderContext","closing","createRef","setState","prevProps","props","opened","waitAnimationFinish","onAnimationFinish","eventHandler","eventName","animationEndEventName","element","elementRef","current","removeEventListener","addEventListener","children","className","onClose","restProps","state","node","string","style","object","func","isRequired","bool"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AAEA,IAAMC,cAAc,GAAGF,YAAY,CAAC,eAAD,CAAnC;;IAEqBG,a;;;;;;;;;;;;;;;;;;4DAaX;AACNC,MAAAA,OAAO,EAAE;AADH,K;;iEAIKT,KAAK,CAACU,SAAN,E;;wEAqBO,YAAM;AACxB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;;;;;;uCArBmBG,S,EAAW;AAC7B,UAAI,KAAKC,KAAL,CAAWC,MAAX,KAAsBF,SAAS,CAACE,MAApC,EAA4C;AAC1C,YAAI,KAAKD,KAAL,CAAWC,MAAX,KAAsB,KAA1B,EAAiC;AAC/B,eAAKH,QAAL,CAAc;AAAEF,YAAAA,OAAO,EAAE;AAAX,WAAd;AACA,eAAKM,mBAAL,CAAyB,KAAKC,iBAA9B;AACD;AACF;AACF;;;wCAEoBC,Y,EAAc;AACjC,UAAMC,SAAS,GAAGZ,gBAAgB,CAACa,qBAAnC;AACA,UAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgBC,OAAhC;;AAEA,UAAIF,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACG,mBAAR,CAA4BL,SAA5B,EAAuCD,YAAvC;AACAG,QAAAA,OAAO,CAACI,gBAAR,CAAyBN,SAAzB,EAAoCD,YAApC;AACD;AACF;;;6BAMS;AAAA,wBACuD,KAAKJ,KAD5D;AAAA,UACAY,QADA,eACAA,QADA;AAAA,UACUC,SADV,eACUA,SADV;AAAA,UACqBZ,MADrB,eACqBA,MADrB;AAAA,UAC6Ba,OAD7B,eAC6BA,OAD7B;AAAA,UACyCC,SADzC;;AAAA,UAEAnB,OAFA,GAEY,KAAKoB,KAFjB,CAEApB,OAFA;AAIR,aACE,oBAAC,WAAD,eAAiBmB,SAAjB;AAA4B,QAAA,SAAS,EAAExB,UAAU,CAACG,cAAD,EAAiB;AAChE,mCAAyBO,MADuC;AAEhE,oCAA0BL;AAFsC,SAAjB,EAG9CiB,SAH8C,CAAjD;AAGe,QAAA,QAAQ,EAAC;AAHxB,UAIE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,GAAG,EAAE,KAAKL;AAA7C,SACG,CAACP,MAAM,IAAIL,OAAX,KAAuBgB,QAD1B,CAJF,EAOG,CAACX,MAAM,IAAIL,OAAX,KAAuB;AAAK,QAAA,OAAO,EAAEkB,OAAd;AAAuB,QAAA,SAAS,EAAC;AAAjC,QAP1B,CADF;AAWD;;;;EAzDwC1B,S;;gBAAtBO,a,eACA;AACjBiB,EAAAA,QAAQ,EAAEvB,SAAS,CAAC4B,IADH;AAEjBJ,EAAAA,SAAS,EAAExB,SAAS,CAAC6B,MAFJ;AAGjBC,EAAAA,KAAK,EAAE9B,SAAS,CAAC+B,MAHA;AAIjBN,EAAAA,OAAO,EAAEzB,SAAS,CAACgC,IAAV,CAAeC,UAJP;AAKjBrB,EAAAA,MAAM,EAAEZ,SAAS,CAACkC,IAAV,CAAeD;AALN,C;;gBADA3B,a,kBASG;AACpBM,EAAAA,MAAM,EAAE;AADY,C;;SATHN,a","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport transitionEvents from '../../lib/transitionEvents';\n\nconst baseClassNames = getClassName('HeaderContext');\n\nexport default class HeaderContext extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    onClose: PropTypes.func.isRequired,\n    opened: PropTypes.bool.isRequired\n  };\n\n  static defaultProps = {\n    opened: false\n  };\n\n  state = {\n    closing: false\n  };\n\n  elementRef = React.createRef();\n\n  componentDidUpdate (prevProps) {\n    if (this.props.opened !== prevProps.opened) {\n      if (this.props.opened === false) {\n        this.setState({ closing: true });\n        this.waitAnimationFinish(this.onAnimationFinish);\n      }\n    }\n  }\n\n  waitAnimationFinish (eventHandler) {\n    const eventName = transitionEvents.animationEndEventName;\n    const element = this.elementRef.current;\n\n    if (element) {\n      element.removeEventListener(eventName, eventHandler);\n      element.addEventListener(eventName, eventHandler);\n    }\n  }\n\n  onAnimationFinish = () => {\n    this.setState({ closing: false });\n  };\n\n  render () {\n    const { children, className, opened, onClose, ...restProps } = this.props;\n    const { closing } = this.state;\n\n    return (\n      <FixedLayout {...restProps} className={classNames(baseClassNames, {\n        'HeaderContext--opened': opened,\n        'HeaderContext--closing': closing\n      }, className)} vertical=\"top\">\n        <div className=\"HeaderContext__in\" ref={this.elementRef}>\n          {(opened || closing) && children}\n        </div>\n        {(opened || closing) && <div onClick={onClose} className=\"HeaderContext__fade\" />}\n      </FixedLayout>\n    );\n  }\n}\n"],"file":"HeaderContext.js"}