{"version":3,"sources":["../../../../src/components/Epic/Epic.tsx"],"names":["React","PropTypes","getClassName","classNames","withPlatform","Epic","hasTabbar","props","hasOwnProperty","className","activeStory","tabbar","children","platform","restProps","Children","toArray","find","item","id","Component","bool"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,OAAOC,YAAP,MAAyB,wBAAzB;;IAWMC,I;;;;;;;;;;;;;sCAC2B;AAC7B,aAAO;AACLC,QAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,cAAX,CAA0B,QAA1B;AADN,OAAP;AAGD;;;6BAMS;AAAA,wBACqE,KAAKD,KAD1E;AAAA,UACAE,SADA,eACAA,SADA;AAAA,UACWC,WADX,eACWA,WADX;AAAA,UACwBC,MADxB,eACwBA,MADxB;AAAA,UACgCC,QADhC,eACgCA,QADhC;AAAA,UAC0CC,QAD1C,eAC0CA,QAD1C;AAAA,UACuDC,SADvD;;AAGR,aACE,wCAASA,SAAT;AAAoB,QAAA,SAAS,EAAEX,UAAU,CAACD,YAAY,CAAC,MAAD,EAASW,QAAT,CAAb,EAAiCJ,SAAjC;AAAzC,UACGT,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuBJ,QAAvB,EAAiCK,IAAjC,CAAsC,UAACC,IAAD;AAAA,eAA8BA,IAAI,CAACX,KAAL,CAAWY,EAAX,KAAkBT,WAAhD;AAAA,OAAtC,CADH,EAEGC,MAFH,CADF;AAMD;;;;EApBgBX,KAAK,CAACoB,S;;gBAAnBf,I,uBAOuB;AACzBC,EAAAA,SAAS,EAAEL,SAAS,CAACoB;AADI,C;;AAgB7B,eAAejB,YAAY,CAACC,IAAD,CAA3B","sourcesContent":["import React, { HTMLAttributes, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { HasChildren, HasPlatform } from '../../types/props';\nimport withPlatform from '../../hoc/withPlatform';\n\nexport interface EpicProps extends HTMLAttributes<HTMLDivElement>, HasChildren, HasPlatform {\n  tabbar: ReactNode,\n  activeStory: string\n}\n\nexport interface EpicContext {\n  hasTabbar: boolean\n}\n\nclass Epic extends React.Component<EpicProps> {\n  getChildContext(): EpicContext {\n    return {\n      hasTabbar: this.props.hasOwnProperty('tabbar')\n    };\n  }\n\n  static childContextTypes = {\n    hasTabbar: PropTypes.bool\n  };\n\n  render () {\n    const { className, activeStory, tabbar, children, platform, ...restProps } = this.props;\n\n    return (\n      <div {...restProps} className={classNames(getClassName('Epic', platform), className)}>\n        {React.Children.toArray(children).find((item: React.ReactElement) => item.props.id === activeStory)}\n        {tabbar}\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(Epic);\n"],"file":"Epic.js"}