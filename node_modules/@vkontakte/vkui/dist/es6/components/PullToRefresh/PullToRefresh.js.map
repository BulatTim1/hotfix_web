{"version":3,"sources":["../../../../src/components/PullToRefresh/PullToRefresh.js"],"names":["React","PureComponent","PropTypes","Touch","TouchRootContext","FixedLayout","classNames","IS_PLATFORM_IOS","IS_PLATFORM_ANDROID","getClassName","PullToRefreshSpinner","baseClassName","cancelEvent","event","originalEvent","preventDefault","stopPropagation","PullToRefresh","props","e","state","refreshing","setState","touchDown","isY","shiftY","params","start","max","pageYOffset","window","watching","positionMultiplier","shift","Math","touchY","currentY","min","maxY","progress","abs","spinnerY","spinnerProgress","canRefresh","contentShift","runRefreshing","refreshingFinished","resetRefreshingState","contentRef","createRef","document","addEventListener","onWindowTouchMove","cancelable","passive","removeEventListener","prevProps","isFetching","onRefreshingFinish","onRefresh","children","className","restProps","spinnerTransform","contentTransform","onTouchStart","onTouchMove","onTouchEnd","transform","WebkitTransform","opacity","context","scrollingElement","scrollTop","node","string","func","isRequired","bool","any"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,gBAAhB,QAAwC,gBAAxC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,eAAT,EAA0BC,mBAA1B,QAAqD,oBAArD;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA,IAAMC,aAAa,GAAGF,YAAY,CAAC,eAAD,CAAlC;;AAEA,SAASG,WAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAI,CAACA,KAAL,EAAY,OAAO,KAAP;;AACZ,SAAOA,KAAK,CAACC,aAAb;AAA4BD,IAAAA,KAAK,GAAGA,KAAK,CAACC,aAAd;AAA5B;;AACA,MAAID,KAAK,CAACE,cAAV,EAA0BF,KAAK,CAACE,cAAN;AAC1B,MAAIF,KAAK,CAACG,eAAV,EAA2BH,KAAK,CAACG,eAAN;AAC3B,SAAO,KAAP;AACD;;IAEoBC,a;;;;;AACnB,yBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,uFAAMA,KAAN;;AADkB,mEA2EL,UAACC,CAAD,EAAO;AACpB,UAAI,MAAKC,KAAL,CAAWC,UAAf,EAA2BT,WAAW,CAACO,CAAD,CAAX;;AAC3B,YAAKG,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KA9EmB;;AAAA,wEAgFA,UAACJ,CAAD,EAAO;AACzB,UAAI,MAAKC,KAAL,CAAWC,UAAf,EAA2BT,WAAW,CAACO,CAAD,CAAX;AAC5B,KAlFmB;;AAAA,kEAoFN,UAACA,CAAD,EAAO;AAAA,UACXK,GADW,GACKL,CADL,CACXK,GADW;AAAA,UACNC,MADM,GACKN,CADL,CACNM,MADM;AAAA,yBAEI,MAAKC,MAFT;AAAA,UAEXC,KAFW,gBAEXA,KAFW;AAAA,UAEJC,GAFI,gBAEJA,GAFI;AAGnB,UAAMC,WAAW,GAAG,MAAKC,MAAL,CAAYD,WAAhC;AAHmB,wBAKyB,MAAKT,KAL9B;AAAA,UAKXC,UALW,eAKXA,UALW;AAAA,UAKCU,QALD,eAKCA,QALD;AAAA,UAKWR,SALX,eAKWA,SALX;;AAOnB,UAAIQ,QAAQ,IAAIR,SAAhB,EAA2B;AACzBX,QAAAA,WAAW,CAACO,CAAD,CAAX;AADyB,YAGjBa,kBAHiB,GAGM,MAAKN,MAHX,CAGjBM,kBAHiB;AAKzB,YAAMC,KAAK,GAAGC,IAAI,CAACN,GAAL,CAAS,CAAT,EAAYH,MAAM,GAAG,MAAKL,KAAL,CAAWe,MAAhC,CAAd;AAEA,YAAMC,QAAQ,GAAGF,IAAI,CAACN,GAAL,CAASD,KAAT,EAAgBO,IAAI,CAACG,GAAL,CAAS,MAAKX,MAAL,CAAYY,IAArB,EAA2BX,KAAK,GAAIM,KAAK,GAAGD,kBAA5C,CAAhB,CAAjB;AACA,YAAMO,QAAQ,GAAGH,QAAQ,GAAG,CAAC,EAAZ,GAAiBF,IAAI,CAACM,GAAL,CAAS,CAACJ,QAAQ,GAAG,EAAZ,IAAkBR,GAA3B,IAAkC,EAAnD,GAAwD,CAAzE;;AAEA,cAAKN,QAAL,CAAc;AACZmB,UAAAA,QAAQ,EAAEL,QADE;AAEZM,UAAAA,eAAe,EAAER,IAAI,CAACG,GAAL,CAAS,EAAT,EAAaH,IAAI,CAACN,GAAL,CAAS,CAAT,EAAYW,QAAZ,CAAb,CAFL;AAGZI,UAAAA,UAAU,EAAEJ,QAAQ,GAAG,EAHX;AAIZK,UAAAA,YAAY,EAAE,CAACR,QAAQ,GAAG,EAAZ,IAAkB;AAJpB,SAAd;;AAOA,YAAIG,QAAQ,GAAG,EAAX,IAAiB,CAAClB,UAAlB,IAAgCd,eAApC,EAAqD;AACnD,gBAAKsC,aAAL;AACD;AACF,OApBD,MAoBO,IAAIrB,GAAG,IAAIK,WAAW,KAAK,CAAvB,IAA4BJ,MAAM,GAAG,CAArC,IAA0C,CAACJ,UAA3C,IAAyDE,SAA7D,EAAwE;AAC7EX,QAAAA,WAAW,CAACO,CAAD,CAAX;;AAEA,cAAKG,QAAL,CAAc;AACZS,UAAAA,QAAQ,EAAE,IADE;AAEZI,UAAAA,MAAM,EAAEV,MAFI;AAGZgB,UAAAA,QAAQ,EAAEd,KAHE;AAIZe,UAAAA,eAAe,EAAE;AAJL,SAAd;AAMD;AACF,KAzHmB;;AAAA,iEA2HP,YAAM;AAAA,yBACsC,MAAKtB,KAD3C;AAAA,UACTC,UADS,gBACTA,UADS;AAAA,UACGsB,UADH,gBACGA,UADH;AAAA,UACeG,kBADf,gBACeA,kBADf;;AAGjB,YAAKxB,QAAL,CAAc;AACZS,QAAAA,QAAQ,EAAE,KADE;AAEZR,QAAAA,SAAS,EAAE;AAFC,OAAd,EAGG,YAAM;AACP,YAAIoB,UAAU,IAAI,CAACtB,UAAnB,EAA+B;AAC7B,gBAAKwB,aAAL;AACD,SAFD,MAEO,IAAIxB,UAAU,IAAIyB,kBAAlB,EAAsC;AAC3C,gBAAKC,oBAAL;AACD,SAFM,MAEA;AACL,gBAAKzB,QAAL,CAAc;AACZmB,YAAAA,QAAQ,EAAEpB,UAAU,GAAG,MAAKK,MAAL,CAAYL,UAAf,GAA4B,MAAKK,MAAL,CAAYC,KADhD;AAEZe,YAAAA,eAAe,EAAE,CAFL;AAGZE,YAAAA,YAAY,EAAE;AAHF,WAAd;AAKD;AACF,OAfD;AAgBD,KA9ImB;;AAAA,yEA2JC,YAAM;AACzB,YAAKtB,QAAL,CAAc;AACZwB,QAAAA,kBAAkB,EAAE;AADR,OAAd,EAEG,YAAM;AACP,SAAC,MAAK1B,KAAL,CAAWG,SAAZ,IAAyB,MAAKwB,oBAAL,EAAzB;AACD,OAJD;AAKD,KAjKmB;;AAGlB,UAAKrB,MAAL,GAAc;AACZC,MAAAA,KAAK,EAAEnB,mBAAmB,GAAG,CAAC,EAAJ,GAAS,CAAC,EADxB;AAEZoB,MAAAA,GAAG,EAAEpB,mBAAmB,GAAG,EAAH,GAAQ,EAFpB;AAGZ8B,MAAAA,IAAI,EAAE9B,mBAAmB,GAAG,EAAH,GAAQ,GAHrB;AAIZa,MAAAA,UAAU,EAAEb,mBAAmB,GAAG,EAAH,GAAQ,EAJ3B;AAMZwB,MAAAA,kBAAkB,EAAExB,mBAAmB,GAAG,CAAH,GAAO;AANlC,KAAd;AASA,UAAKY,KAAL,GAAa;AACXW,MAAAA,QAAQ,EAAE,KADC;AAEXV,MAAAA,UAAU,EAAE,KAFD;AAGXsB,MAAAA,UAAU,EAAE,KAHD;AAKXpB,MAAAA,SAAS,EAAE,KALA;AAMXuB,MAAAA,kBAAkB,EAAE,KANT;AAQXX,MAAAA,MAAM,EAAE,CARG;AASXM,MAAAA,QAAQ,EAAE,MAAKf,MAAL,CAAYC,KATX;AAUXe,MAAAA,eAAe,EAAE,CAVN;AAWXE,MAAAA,YAAY,EAAE;AAXH,KAAb;AAcA,UAAKI,UAAL,GAAkBhD,KAAK,CAACiD,SAAN,EAAlB;AA1BkB;AA2BnB;;;;wCA8BoB;AACnB,WAAKC,QAAL,CAAcC,gBAAd,CAA+B,WAA/B,EAA4C,KAAKC,iBAAjD,EAAoE;AAAEC,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,OAAO,EAAE;AAA7B,OAApE;AACD;;;2CAEuB;AACtB,WAAKJ,QAAL,CAAcK,mBAAd,CAAkC,WAAlC,EAA+C,KAAKH,iBAApD;AACD;;;uCAEmBI,S,EAAW;AAC7B,UAAIA,SAAS,CAACC,UAAV,IAAwB,CAAC,KAAKvC,KAAL,CAAWuC,UAAxC,EAAoD;AAClD,aAAKC,kBAAL;AACD;AACF;;;oCA2EgB;AACf,UAAI,CAAC,KAAKtC,KAAL,CAAWC,UAAZ,IAA0B,KAAKH,KAAL,CAAWyC,SAAzC,EAAoD;AAClD,aAAKrC,QAAL,CAAc;AACZD,UAAAA,UAAU,EAAE,IADA;AAEZoB,UAAAA,QAAQ,EAAEjC,mBAAmB,GAAG,KAAKkB,MAAL,CAAYL,UAAf,GAA4B,KAAKD,KAAL,CAAWqB;AAFxD,SAAd;AAKA,aAAKvB,KAAL,CAAWyC,SAAX;AACD;AACF;;;2CAUuB;AACtB,WAAKrC,QAAL,CAAc;AACZS,QAAAA,QAAQ,EAAE,KADE;AAEZY,QAAAA,UAAU,EAAE,KAFA;AAGZtB,QAAAA,UAAU,EAAE,KAHA;AAIZyB,QAAAA,kBAAkB,EAAE,KAJR;AAKZL,QAAAA,QAAQ,EAAE,KAAKf,MAAL,CAAYC,KALV;AAMZe,QAAAA,eAAe,EAAE,CANL;AAOZE,QAAAA,YAAY,EAAE;AAPF,OAAd;AASD;;;6BAES;AAAA,wBAC6D,KAAK1B,KADlE;AAAA,UACA0C,QADA,eACAA,QADA;AAAA,UACUC,SADV,eACUA,SADV;AAAA,UACqBF,SADrB,eACqBA,SADrB;AAAA,UACgCF,UADhC,eACgCA,UADhC;AAAA,UAC+CK,SAD/C;;AAAA,yBAEyF,KAAK1C,KAF9F;AAAA,UAEAW,QAFA,gBAEAA,QAFA;AAAA,UAEUV,UAFV,gBAEUA,UAFV;AAAA,UAEsBoB,QAFtB,gBAEsBA,QAFtB;AAAA,UAEgCC,eAFhC,gBAEgCA,eAFhC;AAAA,UAEiDC,UAFjD,gBAEiDA,UAFjD;AAAA,UAE6DpB,SAF7D,gBAE6DA,SAF7D;AAAA,UAEwEqB,YAFxE,gBAEwEA,YAFxE;AAIR,UAAMmB,gBAAgB,4BAAqBtB,QAArB,WAAtB;AACA,UAAMuB,gBAAgB,GAAG3C,UAAU,IAAI,CAACE,SAAf,IAA4BhB,eAA5B,gCAA2EA,eAAe,IAAIqC,YAAnB,4BAAoDA,YAApD,cAA2E,EAA/K;AAEA,aACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,QAAA,KAAK,EAAE;AAAlC,SACE,oBAAC,KAAD,eACMkB,SADN;AAEE,QAAA,OAAO,EAAE,KAAKG,YAFhB;AAGE,QAAA,MAAM,EAAE,KAAKC,WAHf;AAIE,QAAA,KAAK,EAAE,KAAKC,UAJd;AAKE,QAAA,SAAS,EAAE7D,UAAU,CAACK,aAAD,EAAgBkD,SAAhB,EAA2B;AAC9C,qCAA2B9B,QADmB;AAE9C,uCAA6BV;AAFiB,SAA3B;AALvB,UAUE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC;AAAvB,SACE,oBAAC,oBAAD;AACE,QAAA,KAAK,EAAE;AACL+C,UAAAA,SAAS,EAAEL,gBADN;AAELM,UAAAA,eAAe,EAAEN,gBAFZ;AAGLO,UAAAA,OAAO,EAAEvC,QAAQ,IAAIV,UAAZ,IAA0BsB,UAA1B,GAAuC,CAAvC,GAA2C;AAH/C,SADT;AAME,QAAA,EAAE,EAAEtB,UANN;AAOE,QAAA,QAAQ,EAAEA,UAAU,GAAG,IAAH,GAAUqB;AAPhC,QADF,CAVF,EAsBE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,GAAG,EAAE,KAAKM,UAFZ;AAGE,QAAA,KAAK,EAAE;AACLoB,UAAAA,SAAS,EAAEJ,gBADN;AAELK,UAAAA,eAAe,EAAEL;AAFZ;AAHT,SAQGJ,QARH,CAtBF,CADF,CADF;AAqCD;;;wBA1Ke;AACd,aAAO,KAAKW,OAAL,CAAarB,QAAb,IAAyBA,QAAhC;AACD;;;wBAEa;AACZ,aAAO,KAAKqB,OAAL,CAAazC,MAAb,IAAuBA,MAA9B;AACD;;;wBAgBgB;AACf,aAAO,KAAKoB,QAAL,CAAcsB,gBAAd,CAA+BC,SAAtC;AACD;;;;EA1EwCxE,a;;gBAAtBgB,a,eA8BA;AACjB2C,EAAAA,QAAQ,EAAE1D,SAAS,CAACwE,IADH;AAEjBb,EAAAA,SAAS,EAAE3D,SAAS,CAACyE,MAFJ;;AAIjB;;;AAGAhB,EAAAA,SAAS,EAAEzD,SAAS,CAAC0E,IAAV,CAAeC,UAPT;;AASjB;;;AAGApB,EAAAA,UAAU,EAAEvD,SAAS,CAAC4E;AAZL,C;;gBA9BA7D,a,kBA6CG;AACpBa,EAAAA,MAAM,EAAE5B,SAAS,CAAC6E,GADE;AAEpB7B,EAAAA,QAAQ,EAAEhD,SAAS,CAAC6E;AAFA,C;;SA7CH9D,a","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Touch, { TouchRootContext } from '../Touch/Touch';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport classNames from '../../lib/classNames';\nimport { IS_PLATFORM_IOS, IS_PLATFORM_ANDROID } from '../../lib/platform';\nimport getClassName from '../../helpers/getClassName';\nimport PullToRefreshSpinner from './PullToRefreshSpinner';\n\nconst baseClassName = getClassName('PullToRefresh');\n\nfunction cancelEvent (event) {\n  if (!event) return false;\n  while (event.originalEvent) event = event.originalEvent;\n  if (event.preventDefault) event.preventDefault();\n  if (event.stopPropagation) event.stopPropagation();\n  return false;\n}\n\nexport default class PullToRefresh extends PureComponent {\n  constructor (props) {\n    super(props);\n\n    this.params = {\n      start: IS_PLATFORM_ANDROID ? -45 : -10,\n      max: IS_PLATFORM_ANDROID ? 80 : 50,\n      maxY: IS_PLATFORM_ANDROID ? 80 : 400,\n      refreshing: IS_PLATFORM_ANDROID ? 50 : 36,\n\n      positionMultiplier: IS_PLATFORM_ANDROID ? 1 : 0.21\n    };\n\n    this.state = {\n      watching: false,\n      refreshing: false,\n      canRefresh: false,\n\n      touchDown: false,\n      refreshingFinished: false,\n\n      touchY: 0,\n      spinnerY: this.params.start,\n      spinnerProgress: 0,\n      contentShift: 0\n    };\n\n    this.contentRef = React.createRef();\n  }\n\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n\n    /**\n     * Будет вызвана для обновления контента\n     */\n    onRefresh: PropTypes.func.isRequired,\n\n    /**\n     * Определяет, выполняется ли обновление. Для скрытия спиннера после получения контента необходимо передать `false`\n     */\n    isFetching: PropTypes.bool\n  };\n\n  static contextTypes = {\n    window: PropTypes.any,\n    document: PropTypes.any\n  };\n\n  get document () {\n    return this.context.document || document;\n  }\n\n  get window () {\n    return this.context.window || window;\n  }\n\n  componentDidMount () {\n    this.document.addEventListener('touchmove', this.onWindowTouchMove, { cancelable: true, passive: false });\n  }\n\n  componentWillUnmount () {\n    this.document.removeEventListener('touchmove', this.onWindowTouchMove);\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.isFetching && !this.props.isFetching) {\n      this.onRefreshingFinish();\n    }\n  }\n\n  get scrollTop () {\n    return this.document.scrollingElement.scrollTop;\n  }\n\n  onTouchStart = (e) => {\n    if (this.state.refreshing) cancelEvent(e);\n    this.setState({ touchDown: true });\n  };\n\n  onWindowTouchMove = (e) => {\n    if (this.state.refreshing) cancelEvent(e);\n  };\n\n  onTouchMove = (e) => {\n    const { isY, shiftY } = e;\n    const { start, max } = this.params;\n    const pageYOffset = this.window.pageYOffset;\n\n    const { refreshing, watching, touchDown } = this.state;\n\n    if (watching && touchDown) {\n      cancelEvent(e);\n\n      const { positionMultiplier } = this.params;\n\n      const shift = Math.max(0, shiftY - this.state.touchY);\n\n      const currentY = Math.max(start, Math.min(this.params.maxY, start + (shift * positionMultiplier)));\n      const progress = currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;\n\n      this.setState({\n        spinnerY: currentY,\n        spinnerProgress: Math.min(80, Math.max(0, progress)),\n        canRefresh: progress > 80,\n        contentShift: (currentY + 10) * 2.3\n      });\n\n      if (progress > 85 && !refreshing && IS_PLATFORM_IOS) {\n        this.runRefreshing();\n      }\n    } else if (isY && pageYOffset === 0 && shiftY > 0 && !refreshing && touchDown) {\n      cancelEvent(e);\n\n      this.setState({\n        watching: true,\n        touchY: shiftY,\n        spinnerY: start,\n        spinnerProgress: 0\n      });\n    }\n  };\n\n  onTouchEnd = () => {\n    const { refreshing, canRefresh, refreshingFinished } = this.state;\n\n    this.setState({\n      watching: false,\n      touchDown: false\n    }, () => {\n      if (canRefresh && !refreshing) {\n        this.runRefreshing();\n      } else if (refreshing && refreshingFinished) {\n        this.resetRefreshingState();\n      } else {\n        this.setState({\n          spinnerY: refreshing ? this.params.refreshing : this.params.start,\n          spinnerProgress: 0,\n          contentShift: 0\n        });\n      }\n    });\n  };\n\n  runRefreshing () {\n    if (!this.state.refreshing && this.props.onRefresh) {\n      this.setState({\n        refreshing: true,\n        spinnerY: IS_PLATFORM_ANDROID ? this.params.refreshing : this.state.spinnerY\n      });\n\n      this.props.onRefresh();\n    }\n  }\n\n  onRefreshingFinish = () => {\n    this.setState({\n      refreshingFinished: true\n    }, () => {\n      !this.state.touchDown && this.resetRefreshingState();\n    });\n  }\n\n  resetRefreshingState () {\n    this.setState({\n      watching: false,\n      canRefresh: false,\n      refreshing: false,\n      refreshingFinished: false,\n      spinnerY: this.params.start,\n      spinnerProgress: 0,\n      contentShift: 0\n    });\n  }\n\n  render () {\n    const { children, className, onRefresh, isFetching, ...restProps } = this.props;\n    const { watching, refreshing, spinnerY, spinnerProgress, canRefresh, touchDown, contentShift } = this.state;\n\n    const spinnerTransform = `translate3d(0, ${spinnerY}px, 0)`;\n    const contentTransform = refreshing && !touchDown && IS_PLATFORM_IOS ? `translate3d(0, 100px, 0)` : IS_PLATFORM_IOS && contentShift ? `translate3d(0, ${contentShift}px, 0)` : '';\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <Touch\n          {...restProps}\n          onStart={this.onTouchStart}\n          onMove={this.onTouchMove}\n          onEnd={this.onTouchEnd}\n          className={classNames(baseClassName, className, {\n            'PullToRefresh--watching': watching,\n            'PullToRefresh--refreshing': refreshing\n          })}\n        >\n          <FixedLayout className=\"PullToRefresh__controls\">\n            <PullToRefreshSpinner\n              style={{\n                transform: spinnerTransform,\n                WebkitTransform: spinnerTransform,\n                opacity: watching || refreshing || canRefresh ? 1 : 0\n              }}\n              on={refreshing}\n              progress={refreshing ? null : spinnerProgress}\n            />\n          </FixedLayout>\n\n          <div\n            className=\"PullToRefresh__content\"\n            ref={this.contentRef}\n            style={{\n              transform: contentTransform,\n              WebkitTransform: contentTransform\n            }}\n          >\n            {children}\n          </div>\n        </Touch>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n"],"file":"PullToRefresh.js"}