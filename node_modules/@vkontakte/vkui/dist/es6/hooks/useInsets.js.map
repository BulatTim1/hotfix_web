{"version":3,"sources":["../../../src/hooks/useInsets.ts"],"names":["useEffect","useState","vkConnect","initialState","bottom","top","left","right","resolveInsets","e","detail","type","data","insets","subscribe","useInsets","setInsets","connectListener","unsubscribe"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAGA,IAAIC,YAA6B,GAAG;AAClCC,EAAAA,MAAM,EAAE,IAD0B;AAElCC,EAAAA,GAAG,EAAE,IAF6B;AAGlCC,EAAAA,IAAI,EAAE,IAH4B;AAIlCC,EAAAA,KAAK,EAAE;AAJ2B,CAApC;;AAOA,SAASC,aAAT,CAAuBC,CAAvB,EAAkD;AAAA,kBACzBA,CAAC,CAACC,MADuB;AAAA,MACxCC,IADwC,aACxCA,IADwC;AAAA,MAClCC,IADkC,aAClCA,IADkC;;AAEhD,UAAQD,IAAR;AACE,SAAK,sBAAL;AACA,SAAK,sBAAL;AAA6B;AAA7B,UACUE,MADV,GACqBD,IADrB,CACUC,MADV;;AAEE,UAAIA,MAAJ,EAAY;AACV,iCACKA,MADL;AAEET,UAAAA,MAAM,EAAES,MAAM,CAACT,MAAP,GAAgB,GAAhB,GAAsB,CAAtB,GAA0BS,MAAM,CAACT,MAF3C,CAEkD;;AAFlD;AAID;;AATL;;AAWA,SAAO,IAAP;AACD;;AAEDF,SAAS,CAACY,SAAV,CAAoB,UAACL,CAAD,EAAO;AACzB,MAAMI,MAAM,GAAGL,aAAa,CAACC,CAAD,CAA5B;;AACA,MAAII,MAAJ,EAAY;AACVV,IAAAA,YAAY,GAAGU,MAAf;AACD;AACF,CALD;AAOA,eAAe,SAASE,SAAT,GAAsC;AAAA,kBACvBd,QAAQ,CAAkBE,YAAlB,CADe;AAAA;AAAA,MAC5CU,MAD4C;AAAA,MACpCG,SADoC;;AAGnDhB,EAAAA,SAAS,CAAC,YAAM;AACd,aAASiB,eAAT,CAAyBR,CAAzB,EAA4B;AAC1B,UAAMI,MAAM,GAAGL,aAAa,CAACC,CAAD,CAA5B;;AACA,UAAII,MAAJ,EAAY;AACVG,QAAAA,SAAS,CAACH,MAAD,CAAT;AACD;AACF;;AAEDX,IAAAA,SAAS,CAACY,SAAV,CAAoBG,eAApB;AACA,WAAO,YAAM;AACXf,MAAAA,SAAS,CAACgB,WAAV,CAAsBD,eAAtB;AACD,KAFD;AAGD,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAOJ,MAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport vkConnect from '@vkontakte/vk-connect';\nimport { InsetsInterface } from './../types/props';\n\nlet initialState: InsetsInterface = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null\n};\n\nfunction resolveInsets(e): InsetsInterface | null {\n  const { type, data } = e.detail;\n  switch (type) {\n    case 'VKWebAppUpdateConfig':\n    case 'VKWebAppUpdateInsets': // Устаревшее событие vk-connect\n      const { insets } = data;\n      if (insets) {\n        return {\n          ...insets,\n          bottom: insets.bottom > 150 ? 0 : insets.bottom // если больше 150 – значит открылась клава и она сама работает как инсет, то есть наш нужно занулить\n        };\n      }\n  }\n  return null;\n}\n\nvkConnect.subscribe((e) => {\n  const insets = resolveInsets(e);\n  if (insets) {\n    initialState = insets;\n  }\n});\n\nexport default function useInsets(): InsetsInterface {\n  const [insets, setInsets] = useState<InsetsInterface>(initialState);\n\n  useEffect(() => {\n    function connectListener(e) {\n      const insets = resolveInsets(e);\n      if (insets) {\n        setInsets(insets);\n      }\n    }\n\n    vkConnect.subscribe(connectListener);\n    return () => {\n      vkConnect.unsubscribe(connectListener);\n    };\n  }, []);\n\n  return insets;\n}\n"],"file":"useInsets.js"}