{"version":3,"sources":["../../../src/lib/touch.ts"],"names":["coordX","e","clientX","touches","coordY","clientY","isClient","window","touchEnabled","getSupportedEvents","rubber","offset","dimension","resistanceRate","isAndroid","result","Math","abs"],"mappings":"AAEA;;;;;;AAMA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD;AAAA,SAA+BA,CAAC,CAACC,OAAF,IAAcD,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACE,OAAF,CAAU,CAAV,EAAaD,OAAvE;AAAA,CAAf;AAEA;;;;;;;;AAMA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACH,CAAD;AAAA,SAA+BA,CAAC,CAACI,OAAF,IAAcJ,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACE,OAAF,CAAU,CAAV,EAAaE,OAAvE;AAAA,CAAf;;AAEA,IAAMC,QAAiB,GAAG,OAAOC,MAAP,KAAkB,WAA5C;AACA,IAAMC,YAAqB,GAAGF,QAAQ,IAAI,kBAAkBC,MAA5D;AAEA;;;;;;AAKA,SAASE,kBAAT,GAA6C;AAC3C,MAAID,YAAJ,EAAkB;AAChB,WAAO,CAAC,YAAD,EAAe,WAAf,EAA4B,UAA5B,EAAwC,aAAxC,CAAP;AACD;;AAED,SAAO,CAAC,WAAD,EAAc,WAAd,EAA2B,SAA3B,EAAsC,YAAtC,CAAP;AACD;AAED;;;;;AAGA,SAASE,MAAT,CAAgBC,MAAhB,EAAgCC,SAAhC,EAAmDC,cAAnD,EAA2EC,SAA3E,EAAuG;AACrG,MAAIA,SAAS,IAAIH,MAAM,GAAG,CAA1B,EAA6B,OAAOA,MAAP;AAE7B,MAAMI,MAAM,GAAIF,cAAc,GAAGG,IAAI,CAACC,GAAL,CAASN,MAAT,CAAjB,GAAoCC,SAArC,IAAmDA,SAAS,GAAGC,cAAc,GAAGG,IAAI,CAACC,GAAL,CAASN,MAAT,CAAhF,CAAf;AACA,SAAOA,MAAM,GAAG,CAAT,GAAa,CAACI,MAAd,GAAuBA,MAA9B;AACD;;AAED,SAASN,kBAAT,EAA6BT,MAA7B,EAAqCI,MAArC,EAA6CI,YAA7C,EAA2DE,MAA3D","sourcesContent":["export interface VKUITouchEvent extends MouseEvent, TouchEvent {}\n\n/**\n * Получает кординату по оси абсцисс из touch- или mouse-события\n *\n * @param e Браузерное событие\n * @returns Координата взаимодействия по оси абсцисс\n */\nconst coordX = (e: VKUITouchEvent): number => e.clientX || (e.touches && e.touches[0].clientX);\n\n/**\n * Получает кординату по оси ординат из touch- или mouse-события\n *\n * @param e Браузерное событие\n * @returns Координата взаимодействия по оси ординат\n */\nconst coordY = (e: VKUITouchEvent): number => e.clientY || (e.touches && e.touches[0].clientY);\n\nconst isClient: boolean = typeof window !== 'undefined';\nconst touchEnabled: boolean = isClient && 'ontouchstart' in window;\n\n/**\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\nfunction getSupportedEvents(): Array<string> {\n  if (touchEnabled) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n\n/**\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\nfunction rubber(offset: number, dimension: number, resistanceRate: number, isAndroid: boolean): number {\n  if (isAndroid || offset < 0) return offset;\n\n  const result = (resistanceRate * Math.abs(offset) * dimension) / (dimension + resistanceRate * Math.abs(offset));\n  return offset < 0 ? -result : result;\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };\n"],"file":"touch.js"}