{"version":3,"sources":["../../src/lib/SSR.tsx"],"names":["SSRContext","React","createContext","platform","SSRWrapper","userAgent","children"],"mappings":";;;;;;;;;AAAA;;AACA;;AAOO,IAAMA,UAA8C,GAAGC,eAAMC,aAAN,CAAoB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAApB,CAAvD;;;;AAMA,IAAMC,UAAoD,GAAG,SAAvDA,UAAuD;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,QAAd,QAAcA,QAAd;AAAA,SAClE,6BAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEH,MAAAA,QAAQ,EAAE,wBAASE,SAAT;AAAZ;AAA5B,KACGC,QADH,CADkE;AAAA,CAA7D","sourcesContent":["import React from 'react';\nimport { OS, platform } from './platform';\nimport { HasChildren } from '../types/props';\n\nexport interface SSRContextInterface {\n  platform: OS\n}\n\nexport const SSRContext: React.Context<SSRContextInterface> = React.createContext({ platform: null });\n\nexport interface SSRWrapperProps extends HasChildren {\n  userAgent?: string\n}\n\nexport const SSRWrapper: React.FunctionComponent<SSRWrapperProps> = ({ userAgent, children }: SSRWrapperProps) => (\n  <SSRContext.Provider value={{ platform: platform(userAgent) }}>\n    {children}\n  </SSRContext.Provider>\n);\n"],"file":"SSR.js"}