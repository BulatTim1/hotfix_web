{"version":3,"sources":["../../src/lib/request.js"],"names":["defaultOptions","method","data","getXMLHttpRequest","XMLHttpRequest","makeRequest","url","options","isCanceled","error","Error","request","opts","toLowerCase","querystring","create","requestPromise","Promise","resolve","reject","timeout","open","headers","Object","keys","forEach","key","setRequestHeader","onreadystatechange","readyState","status","responseText","ontimeout","send","promise","then","res","catch","e","console","log","abort"],"mappings":"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","sourcesContent":["import querystring from './querystring';\n\nconst defaultOptions = {\n  method: 'GET',\n  data: null\n};\n\nfunction getXMLHttpRequest () {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // eslint-disable-next-line\n    return new XMLHttpRequest();\n  }\n}\n\nfunction makeRequest (url, options) {\n  let isCanceled;\n\n  const error = new Error('Request was aborted');\n  const request = getXMLHttpRequest();\n  const opts = { ...defaultOptions, ...options };\n\n  if (opts.data && opts.method.toLowerCase() === 'get') {\n    url += `?${querystring.create(opts.data)}`;\n  }\n\n  const requestPromise = new Promise((resolve, reject) => {\n    if (!request) {\n      reject(new Error('XMLHttpRequest not supported'));\n    }\n\n    if (opts.timeout) {\n      request.timeout = opts.timeout;\n    }\n\n    request.open(opts.method, url, true);\n\n    if (opts.headers) {\n      Object.keys(opts.headers).forEach(key => {\n        request.setRequestHeader(key, opts.headers[key]);\n      });\n    }\n\n    request.onreadystatechange = function () {\n      if (request.readyState === 4) {\n        if (request.status === 200) {\n          resolve(request.responseText);\n        } else {\n          reject(new Error(request.status));\n        }\n      }\n    };\n\n    request.ontimeout = function () {\n      reject(new Error('XMLHttpRequest timeout expires'));\n    };\n\n    request.send(opts.data);\n  });\n\n  return {\n\n    promise: new Promise(function (resolve, reject) {\n      requestPromise\n        .then(res => isCanceled ? reject(error) : resolve(res))\n        .catch((e) => isCanceled ? console.log(error) || reject(error) : reject(e));\n    }),\n\n    abort () {\n      isCanceled = true;\n      if (request) {\n        request.abort();\n      }\n    }\n\n  };\n}\n\n/**\n * @deprecated будет удален в версии 3.0.0\n */\nexport default (url, options) => makeRequest(url, options);\n"],"file":"request.js"}