{"version":3,"sources":["../../tmp/16/dropdown.ts"],"names":["viewBox","id","content","isMounted","mountIcon","BrowserSymbol","Icon16Dropdown","props","React","createElement","SvgIcon","width","isNaN","height"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;;;AALA;AAEA;AAKA,IAAMA,OAAO,GAAG,WAAhB;AACA,IAAMC,EAAE,GAAG,aAAX;AACA,IAAMC,OAAO,GAAG,sUAAhB;AAEA,IAAIC,SAAS,GAAG,KAAhB;;AACA,SAASC,SAAT,GAAqB;AACnB,MAAI,CAACD,SAAL,EAAgB;AACd,iCAAgB,IAAIE,sBAAJ,CAAkB;AAChCJ,MAAAA,EAAE,EAAEA,EAD4B;AAEhCD,MAAAA,OAAO,EAAEA,OAFuB;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAhB;AAMAC,IAAAA,SAAS,GAAG,IAAZ;AACD;AACF;;AASD,IAAMG,cAAuC,GAAG,SAA1CA,cAA0C,CAACC,KAAD,EAAW;AACzD,yCAA0B,YAAM;AAC9BH,IAAAA,SAAS;AACV,GAFD,EAEG,EAFH;AAIA,SAAOI,eAAMC,aAAN,CAAoBC,gBAApB,EAA6B,6BAAO,EAAP,EAAWH,KAAX,EAAkB;AACpDP,IAAAA,OAAO,EAAEA,OAD2C;AAEpDC,IAAAA,EAAE,EAAEA,EAFgD;AAGpDU,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACL,KAAK,CAACI,KAAP,CAAN,GAAsB,CAACJ,KAAK,CAACI,KAA7B,GAAqC,EAHQ;AAIpDE,IAAAA,MAAM,EAAE,CAACD,KAAK,CAACL,KAAK,CAACM,MAAP,CAAN,GAAuB,CAACN,KAAK,CAACM,MAA9B,GAAuC;AAJK,GAAlB,CAA7B,CAAP;AAMD,CAXD;;AAaCP,cAAD,CAAwBF,SAAxB,GAAoCA,SAApC;eAEeE,c","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 16 12';\nconst id = 'dropdown_16';\nconst content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 12\" id=\"dropdown_16\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h16v12H0z\" /><path d=\"M4.454 3.691A.9.9 0 103.346 5.11l4.096 3.203a.9.9 0 001.109 0l4.1-3.203a.9.9 0 10-1.108-1.418L7.997 6.46l-3.543-2.77z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon16DropdownProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon16Dropdown: FC<Icon16DropdownProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 16,\n    height: !isNaN(props.height) ? +props.height : 12,\n  }));\n};\n\n(Icon16Dropdown as any).mountIcon = mountIcon;\n\nexport default Icon16Dropdown;\n"],"file":"dropdown.js"}