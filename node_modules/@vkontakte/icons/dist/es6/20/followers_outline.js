import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 20 20';
var id = 'followers_outline_20';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" id="followers_outline_20"><g fill="none" fill-rule="evenodd"><path opacity=".4" d="M0 0h20v20H0z" /><path d="M5.5 16a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm7-.75a.75.75 0 11-1.5 0C11 11.714 8.286 9 4.75 9a.75.75 0 010-1.5c4.364 0 7.75 3.386 7.75 7.75zm5 0a.75.75 0 11-1.5 0C16 8.914 11.086 4 4.75 4a.75.75 0 010-1.5c7.164 0 12.75 5.586 12.75 12.75z" fill="currentColor" fill-rule="nonzero" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon20FollowersOutline = function Icon20FollowersOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 20,
    height: !isNaN(props.height) ? +props.height : 20
  }));
};

Icon20FollowersOutline.mountIcon = mountIcon;
export default Icon20FollowersOutline;
//# sourceMappingURL=followers_outline.js.map