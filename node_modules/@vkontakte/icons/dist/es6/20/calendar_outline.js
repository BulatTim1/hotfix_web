import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 20 20';
var id = 'calendar_outline_20';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" id="calendar_outline_20"><g fill-rule="nonzero" fill="none"><path opacity=".527" d="M0 0h20v20H0z" /><path d="M6.271 2c.165 0 .29.03.396.087a.59.59 0 01.246.246.816.816 0 01.087.396v.27h6v-.27c0-.165.03-.29.087-.396a.59.59 0 01.246-.246.816.816 0 01.396-.087h.042c.165 0 .29.03.396.087a.59.59 0 01.246.246.816.816 0 01.087.396l.001.278c.837.029 1.322.147 1.824.416.538.287.965.714 1.252 1.252.314.587.423 1.15.423 2.28v6.09c0 1.13-.109 1.693-.423 2.28a3.021 3.021 0 01-1.252 1.252c-.587.314-1.15.423-2.28.423h-8.09c-1.13 0-1.693-.109-2.28-.423a3.021 3.021 0 01-1.252-1.252c-.314-.587-.423-1.15-.423-2.28v-6.09c0-1.13.109-1.693.423-2.28a3.021 3.021 0 011.252-1.252c.502-.269.987-.387 1.825-.416V2.73c0-.165.03-.29.087-.396a.59.59 0 01.246-.246A.816.816 0 016.229 2h.042zM16.5 9h-13v4.045c0 .903.064 1.233.245 1.572.148.277.36.49.638.638.34.181.67.245 1.572.245h8.09c.903 0 1.233-.064 1.572-.245.277-.148.49-.36.638-.638.181-.34.245-.67.245-1.572V9zM13 4.499H7v.272c0 .165-.03.29-.087.396a.59.59 0 01-.246.246.816.816 0 01-.396.087H6.23a.816.816 0 01-.396-.087.59.59 0 01-.246-.246.816.816 0 01-.087-.396l-.002-.264c-.572.021-.84.091-1.115.238-.277.148-.49.36-.638.638-.181.34-.245.67-.245 1.572V7.5h13v-.545c0-.903-.064-1.233-.245-1.572a1.522 1.522 0 00-.638-.638c-.274-.147-.543-.216-1.114-.238l-.003.264c0 .165-.03.29-.087.396a.59.59 0 01-.246.246.816.816 0 01-.396.087h-.042a.816.816 0 01-.396-.087.59.59 0 01-.246-.246.816.816 0 01-.087-.396V4.5z" fill="currentColor" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon20CalendarOutline = function Icon20CalendarOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 20,
    height: !isNaN(props.height) ? +props.height : 20
  }));
};

Icon20CalendarOutline.mountIcon = mountIcon;
export default Icon20CalendarOutline;
//# sourceMappingURL=calendar_outline.js.map