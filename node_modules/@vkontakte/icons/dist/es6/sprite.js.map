{"version":3,"sources":["../../tmp/sprite.ts"],"names":["BrowserSprite","useLayoutEffect","useEffect","canUseDOM","window","document","createElement","browserSprite","spriteId","attrs","id","mount","spriteNode","getElementById","attach","querySelector","addEventListener","addSpriteSymbol","symbol","add","useIsomorphicLayoutEffect"],"mappings":"AAAA;AACA,OAAOA,aAAP,MAA0B,kCAA1B;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,IAAMC,SAAS,GAAG,CAAC,EACjB,OAAOC,MAAP,KAAkB,WAAlB,IACAA,MAAM,CAACC,QADP,IAEAD,MAAM,CAACC,QAAP,CAAgBC,aAHC,CAAnB;AAMA,IAAIC,aAAJ;;AAEA,IAAIJ,SAAJ,EAAe;AACb,MAAMK,QAAQ,GAAG,qBAAjB;AAEAD,EAAAA,aAAa,GAAG,IAAIP,aAAJ,CAAkB;AAAES,IAAAA,KAAK,EAAE;AAAEC,MAAAA,EAAE,EAAEF;AAAN;AAAT,GAAlB,CAAhB;;AAEA,MAAMG,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,QAAMC,UAAU,GAAGP,QAAQ,CAACQ,cAAT,CAAwBL,QAAxB,CAAnB;;AACA,QAAII,UAAJ,EAAgB;AACdL,MAAAA,aAAa,CAACO,MAAd,CAAqBF,UAArB;AACD,KAFD,MAEO;AACLL,MAAAA,aAAa,CAACI,KAAd;AACD;AACF,GAPD;;AASA,MAAIN,QAAQ,CAACU,aAAT,CAAuB,MAAvB,CAAJ,EAAoC;AAClCJ,IAAAA,KAAK;AACN,GAFD,MAEO;AACLN,IAAAA,QAAQ,CAACW,gBAAT,CAA0B,kBAA1B,EAA8CL,KAA9C;AACD;AACF,CAnBD,MAmBO;AACLJ,EAAAA,aAAa,GAAG,IAAhB;AACD;;AAED,OAAO,SAASU,eAAT,CAAyBC,MAAzB,EAAsC;AAC3C,MAAIX,aAAJ,EAAmB;AACjBA,IAAAA,aAAa,CAACY,GAAd,CAAkBD,MAAlB;AACD;AACF;AAED,OAAO,IAAME,yBAAyB,GAAGjB,SAAS,GAAGF,eAAH,GAAqBC,SAAhE","sourcesContent":["// @ts-ignore\nimport BrowserSprite from 'svg-baker-runtime/browser-sprite';\nimport { useLayoutEffect, useEffect } from 'react';\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet browserSprite: BrowserSprite | null;\n\nif (canUseDOM) {\n  const spriteId = '__SVG_SPRITE_NODE__';\n\n  browserSprite = new BrowserSprite({ attrs: { id: spriteId } });\n\n  const mount = () => {\n    const spriteNode = document.getElementById(spriteId);\n    if (spriteNode) {\n      browserSprite.attach(spriteNode);\n    } else {\n      browserSprite.mount();\n    }\n  };\n\n  if (document.querySelector('body')) {\n    mount();\n  } else {\n    document.addEventListener('DOMContentLoaded', mount);\n  }\n} else {\n  browserSprite = null;\n}\n\nexport function addSpriteSymbol(symbol: any) {\n  if (browserSprite) {\n    browserSprite.add(symbol);\n  }\n}\n\nexport const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n"],"file":"sprite.js"}