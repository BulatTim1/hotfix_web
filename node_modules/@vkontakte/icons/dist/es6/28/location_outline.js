import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 28 28';
var id = 'location_outline_28';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" id="location_outline_28"><g fill="none" fill-rule="evenodd"><path d="M0 0h28v28H0z" /><path d="M12.326 16.08l-7.084-.738a2.5 2.5 0 01-.591-4.837l14.735-5.326a3 3 0 013.841 3.84l-5.326 14.736a2.5 2.5 0 01-4.838-.59l-.737-7.085zm-7.077-3.656a.5.5 0 00.2.929l7.89.822a1 1 0 01.892.891l.822 7.89a.5.5 0 00.967.119L21.346 8.34a1 1 0 00-1.28-1.28L5.33 12.385l-.082.039z" fill="currentColor" fill-rule="nonzero" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon28LocationOutline = function Icon28LocationOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 28,
    height: !isNaN(props.height) ? +props.height : 28
  }));
};

Icon28LocationOutline.mountIcon = mountIcon;
export default Icon28LocationOutline;
//# sourceMappingURL=location_outline.js.map