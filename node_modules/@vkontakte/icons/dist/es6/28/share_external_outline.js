import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 28 28';
var id = 'share_external_outline_28';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" id="share_external_outline_28"><g fill="none" fill-rule="evenodd"><path d="M0 0h28v28H0z" /><path d="M20 2a4 4 0 11-2.774 6.882l-6.402 3.94a4 4 0 010 2.356l6.4 3.941a4 4 0 11-1.048 1.702l-6.402-3.94a4 4 0 110-5.764l6.402-3.939A4 4 0 0120 2zm0 18a2 2 0 100 4 2 2 0 000-4zM7 12a2 2 0 100 4 2 2 0 000-4zm13-8a2 2 0 100 4 2 2 0 000-4z" fill="currentColor" fill-rule="nonzero" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon28ShareExternalOutline = function Icon28ShareExternalOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 28,
    height: !isNaN(props.height) ? +props.height : 28
  }));
};

Icon28ShareExternalOutline.mountIcon = mountIcon;
export default Icon28ShareExternalOutline;
//# sourceMappingURL=share_external_outline.js.map