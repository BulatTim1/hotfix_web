import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 28 28';
var id = 'voice_28';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" id="voice_28"><g fill="none" fill-rule="evenodd"><path d="M0 0h28v28H0z" /><path d="M15 22.47v3.03a1 1 0 01-2 0v-3.03a9.253 9.253 0 01-8.292-7.261 1 1 0 111.955-.422A7.253 7.253 0 0013.75 20.5h.5a7.253 7.253 0 007.087-5.712 1 1 0 011.955.422A9.253 9.253 0 0115 22.47zM14 2a5 5 0 015 5v6a5 5 0 01-10 0V7a5 5 0 015-5z" fill="currentColor" fill-rule="nonzero" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon28Voice = function Icon28Voice(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 28,
    height: !isNaN(props.height) ? +props.height : 28
  }));
};

Icon28Voice.mountIcon = mountIcon;
export default Icon28Voice;
//# sourceMappingURL=voice.js.map