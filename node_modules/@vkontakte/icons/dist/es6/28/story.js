import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 28 28';
var id = 'story_28';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" id="story_28"><g fill="none" fill-rule="evenodd"><path d="M0 0h28v28H0z" /><path d="M8.297 3.5h11.406A4.797 4.797 0 0124.5 8.297v11.406a4.797 4.797 0 01-4.797 4.797H8.297A4.797 4.797 0 013.5 19.703V8.297A4.797 4.797 0 018.297 3.5zM8.25 14A5.752 5.752 0 0014 19.75 5.752 5.752 0 0019.75 14 5.752 5.752 0 0014 8.25 5.752 5.752 0 008.25 14zm1.998 0a3.75 3.75 0 117.5 0 3.75 3.75 0 01-7.5 0z" fill="currentColor" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon28Story = function Icon28Story(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 28,
    height: !isNaN(props.height) ? +props.height : 28
  }));
};

Icon28Story.mountIcon = mountIcon;
export default Icon28Story;
//# sourceMappingURL=story.js.map