import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 28 28';
var id = 'notification_28';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" id="notification_28"><g fill="none" fill-rule="evenodd"><path d="M0 0h28v28H0z" /><path d="M14 25.5c-1.693 0-3-.875-3-2.5h6c0 1.625-1.307 2.5-3 2.5zm7.495-8.5c0 2 2.505 2.5 2.505 3.5s-.5 1.5-2.5 1.5h-15c-2 0-2.5-.5-2.5-1.5S6.5 19 6.5 17v-4C6.5 8 9 4 13 4c0-.75.5-1 1-1s1 .25 1 1c4 0 6.495 4 6.495 9v4z" fill="currentColor" fill-rule="nonzero" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon28Notification = function Icon28Notification(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 28,
    height: !isNaN(props.height) ? +props.height : 28
  }));
};

Icon28Notification.mountIcon = mountIcon;
export default Icon28Notification;
//# sourceMappingURL=notification.js.map