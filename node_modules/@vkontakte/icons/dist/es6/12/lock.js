import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 12 12';
var id = 'lock_12';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12" id="lock_12"><g fill="none" fill-rule="evenodd"><path d="M0 0h12v12H0z" /><path fill="currentColor" d="M3 5V3.497a3 3 0 016-.002V5h.539c.334 0 .455.035.577.1a.681.681 0 01.284.284c.065.122.1.243.1.577v4.078c0 .334-.035.455-.1.577a.681.681 0 01-.284.284c-.122.065-.243.1-.577.1H2.46c-.334 0-.455-.035-.577-.1a.681.681 0 01-.284-.284c-.065-.122-.1-.243-.1-.577V5.96c0-.334.035-.455.1-.577a.681.681 0 01.284-.284c.122-.065.243-.1.577-.1H3zm3-3a1.5 1.5 0 00-1.5 1.5V5h3V3.5A1.5 1.5 0 006 2z" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon12Lock = function Icon12Lock(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 12,
    height: !isNaN(props.height) ? +props.height : 12
  }));
};

Icon12Lock.mountIcon = mountIcon;
export default Icon12Lock;
//# sourceMappingURL=lock.js.map