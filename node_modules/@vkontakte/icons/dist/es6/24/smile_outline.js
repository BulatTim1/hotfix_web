import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 24 24';
var id = 'smile_outline_24';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="smile_outline_24"><g fill="none" fill-rule="evenodd"><path d="M0 0h24v24H0z" /><path d="M2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0zm17.2 0a7.7 7.7 0 10-15.4 0 7.7 7.7 0 0015.4 0zM9 11.571A1.286 1.286 0 119 9a1.286 1.286 0 010 2.571zm6 0A1.286 1.286 0 1115 9a1.286 1.286 0 010 2.571zm-7.213 3.514a.9.9 0 011.446-1.072 3.386 3.386 0 005.516-.097.9.9 0 111.482 1.021 5.186 5.186 0 01-8.444.148z" fill="currentColor" fill-rule="nonzero" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon24SmileOutline = function Icon24SmileOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 24,
    height: !isNaN(props.height) ? +props.height : 24
  }));
};

Icon24SmileOutline.mountIcon = mountIcon;
export default Icon24SmileOutline;
//# sourceMappingURL=smile_outline.js.map