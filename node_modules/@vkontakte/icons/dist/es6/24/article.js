import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 24 24';
var id = 'article_24';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24" id="article_24"><defs><path d="M20 11a1 1 0 011 1v.5a1 1 0 01-1 1H4a1 1 0 01-1-1V12a1 1 0 011-1h16zm0-5.5a1 1 0 011 1V7a1 1 0 01-1 1H4a1 1 0 01-1-1v-.5a1 1 0 011-1h16zM4 19a1 1 0 01-1-1v-.5a1 1 0 011-1h9a1 1 0 011 1v.5a1 1 0 01-1 1H4z" id="article_24_a" /></defs><g fill="none" fill-rule="evenodd"><path d="M0 0h24v24H0z" /><use fill="currentColor" fill-rule="nonzero" xlink:href="#article_24_a" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon24Article = function Icon24Article(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 24,
    height: !isNaN(props.height) ? +props.height : 24
  }));
};

Icon24Article.mountIcon = mountIcon;
export default Icon24Article;
//# sourceMappingURL=article.js.map