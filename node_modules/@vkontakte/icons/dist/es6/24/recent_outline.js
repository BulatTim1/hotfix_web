import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 24 24';
var id = 'recent_outline_24';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="recent_outline_24"><g fill="none" fill-rule="evenodd"><path d="M0 0h24v24H0z" /><path d="M12 21.428A9.428 9.428 0 012.571 12 9.428 9.428 0 0112 2.57c5.206 0 9.429 4.221 9.429 9.429 0 5.207-4.223 9.428-9.429 9.428zm0-1.8a7.63 7.63 0 10-.001-15.258A7.63 7.63 0 0012 19.628zm4.085-6.387a.9.9 0 11-.575 1.706l-4.226-1.427a.9.9 0 01-.613-.853V8.353a.9.9 0 111.8 0v3.668l3.614 1.22z" fill="currentColor" fill-rule="nonzero" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon24RecentOutline = function Icon24RecentOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 24,
    height: !isNaN(props.height) ? +props.height : 24
  }));
};

Icon24RecentOutline.mountIcon = mountIcon;
export default Icon24RecentOutline;
//# sourceMappingURL=recent_outline.js.map