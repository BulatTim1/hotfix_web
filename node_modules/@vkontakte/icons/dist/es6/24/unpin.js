import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 24 24';
var id = 'unpin_24';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="unpin_24"><g fill="none" fill-rule="evenodd"><path d="M0 0h24v24H0z" /><path d="M15.498 13.083l4.701 4.702a1 1 0 01-1.414 1.414l-3.287-3.287v2.85a.72.72 0 01-1.229.509l-3.887-3.887-4.748 4.748a1.25 1.25 0 11-1.768-1.767l4.748-4.749L4.727 9.73a.72.72 0 01.51-1.229h2.851l-3.29-3.29a1 1 0 011.414-1.415L10.917 8.5h.002l4.58 4.58v.003zm1.124-1.707l-4-4L14.498 5.5V3.69a.7.7 0 011.195-.495l5.11 5.11a.7.7 0 01-.495 1.195h-1.81l-1.876 1.876z" fill="currentColor" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon24Unpin = function Icon24Unpin(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 24,
    height: !isNaN(props.height) ? +props.height : 24
  }));
};

Icon24Unpin.mountIcon = mountIcon;
export default Icon24Unpin;
//# sourceMappingURL=unpin.js.map