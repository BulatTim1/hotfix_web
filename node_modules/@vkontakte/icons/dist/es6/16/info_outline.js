import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 16 16';
var id = 'info_outline_16';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="info_outline_16"><clipPath id="info_outline_16_a"><path d="M0 0h16v16H0z" /></clipPath><g clip-path="url(#info_outline_16_a)"><path d="M7.153 7.906a.847.847 0 111.694 0v3.482a.847.847 0 11-1.694 0z" fill="#99a2ad" /><path d="M8 3.765a.941.941 0 100 1.882.941.941 0 000-1.882z" fill="currentColor" /><circle cx="8.02" cy="8" r="7.25" stroke="currentColor" stroke-width="1.5" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon16InfoOutline = function Icon16InfoOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 16,
    height: !isNaN(props.height) ? +props.height : 16
  }));
};

Icon16InfoOutline.mountIcon = mountIcon;
export default Icon16InfoOutline;
//# sourceMappingURL=info_outline.js.map