import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 16 16';
var id = 'up_16';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="up_16"><g fill="none" fill-rule="evenodd"><path d="M0 0h16v16H0z" /><path d="M8.616 2.206l.095.083 4 4a1.005 1.005 0 01-1.327 1.505l-.095-.083-2.284-2.285V13a1.005 1.005 0 01-2.003.117L6.995 13V5.424L4.711 7.711c-.363.362-.933.39-1.327.083l-.095-.083a1.005 1.005 0 01-.083-1.327l.083-.095 4-4c.363-.362.933-.39 1.327-.083z" fill="currentColor" fill-rule="nonzero" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon16Up = function Icon16Up(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 16,
    height: !isNaN(props.height) ? +props.height : 16
  }));
};

Icon16Up.mountIcon = mountIcon;
export default Icon16Up;
//# sourceMappingURL=up.js.map