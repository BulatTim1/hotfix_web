{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\hotfix_web\\\\src\\\\panels\\\\Orders.js\";\nimport React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport refresh from \"../img/refresh-button.svg\";\nimport './orders.css';\n\nconst Orders = ({\n  order,\n  orderStatuses,\n  foodAreas,\n  setFinishedOrder,\n  setActiveOrder\n}) => {\n  const activeOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses).filter(shopId => orderStatuses[shopId] === 'ACTIVE').map(shopId => shopId);\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n    foodAreas.forEach(area => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeId: area.id,\n            placeName: area.name,\n            shopId: item.id,\n            shopName: item.name,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const {\n                  item: {\n                    price\n                  },\n                  count\n                } = order[food.id];\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`\n          };\n          result.push(data);\n        }\n      });\n    });\n    return result;\n  }, [order, orderStatuses, foodAreas]);\n  const finishedOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses).filter(shopId => orderStatuses[shopId] !== 'ACTIVE').map(shopId => shopId);\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n    foodAreas.forEach(area => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeName: area.name,\n            shopName: item.name,\n            shopId: item.id,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const {\n                  item: {\n                    price\n                  },\n                  count\n                } = order[food.id];\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`\n          };\n          result.push(data);\n        }\n      });\n    });\n    return result;\n  }, [order, orderStatuses, foodAreas]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"Orders__active-orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, activeOrders.map(order => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"Orders__active-order\",\n    key: order.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Orders__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"Orders__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, order.placeName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Orders__shop-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, order.shopName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Orders__price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"\\u0421\\u0443\\u043C\\u043C\\u0430 \", order.price, \" - \\u041E\\u043F\\u043B\\u0430\\u0447\\u0435\\u043D\\u043E\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Orders__time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"~ 15 \\u041C\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"Orders__change\",\n    to: `/place/${order.placeId}/${order.shopId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"\\u0418\\u0437\\u043C\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"Orders__cancel\",\n    onClick: () => {\n      setCanceledOrder({\n        itemId: order.shopId\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u0442\\u043C.\")))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"Orders__finished-orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, finishedOrders.map(order => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"Orders__finished-order\",\n    key: order.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Orders__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"Orders__header Orders__dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, order.placeName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Orders__shop-name Orders__pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, order.shopName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Orders__price Orders__pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"\\u0421\\u0443\\u043C\\u043C\\u0430 \", order.price, \" - \\u041E\\u043F\\u043B\\u0430\\u0447\\u0435\\u043D\\u043E\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Orders__repeat\",\n    onClick: () => {\n      setActiveOrder({\n        itemId: order.shopId\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"Orders__refresh\",\n    alt: \"repeat order\",\n    src: refresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nOrders.defaultProps = {\n  setFinishedOrder: () => {},\n  setActiveOrder: () => {}\n};\nexport default Orders;","map":{"version":3,"sources":["E:/Projects/hotfix_web/src/panels/Orders.js"],"names":["React","useMemo","Link","Orders","order","orderStatuses","foodAreas","setFinishedOrder","setActiveOrder","activeOrders","activeOrdersList","Object","keys","filter","shopId","map","result","activeOrdersSet","Set","forEach","area","items","item","has","id","data","placeId","placeName","name","shopName","price","foods","reduce","food","count","parseInt","link","push","finishedOrders","setCanceledOrder","itemId","refresh","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,OAAO,cAAP;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,aAAT;AAAwBC,EAAAA,SAAxB;AAAmCC,EAAAA,gBAAnC;AAAqDC,EAAAA;AAArD,CAAD,KAA2E;AACxF,QAAMC,YAAY,GAAGR,OAAO,CAAC,MAAM;AACjC,UAAMS,gBAAgB,GAAGC,MAAM,CAACC,IAAP,CAAYP,aAAZ,EACtBQ,MADsB,CACfC,MAAM,IAAIT,aAAa,CAACS,MAAD,CAAb,KAA0B,QADrB,EAEtBC,GAFsB,CAElBD,MAAM,IAAIA,MAFQ,CAAzB;AAIA,UAAME,MAAM,GAAG,EAAf;AACA,UAAMC,eAAe,GAAG,IAAIC,GAAJ,CAAQR,gBAAR,CAAxB;AAEAJ,IAAAA,SAAS,CAACa,OAAV,CAAmBC,IAAD,IAAU;AAC1BA,MAAAA,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAmBG,IAAI,IAAI;AACzB,YAAIL,eAAe,CAACM,GAAhB,CAAoBD,IAAI,CAACE,EAAzB,CAAJ,EAAkC;AAChC,gBAAMC,IAAI,GAAG;AACXC,YAAAA,OAAO,EAAEN,IAAI,CAACI,EADH;AAEXG,YAAAA,SAAS,EAAEP,IAAI,CAACQ,IAFL;AAGXd,YAAAA,MAAM,EAAEQ,IAAI,CAACE,EAHF;AAIXK,YAAAA,QAAQ,EAAEP,IAAI,CAACM,IAJJ;AAKXE,YAAAA,KAAK,EAAER,IAAI,CAACS,KAAL,CAAWC,MAAX,CAAkB,CAAChB,MAAD,EAASiB,IAAT,KAAkB;AACzC,kBAAIA,IAAI,CAACT,EAAL,IAAWpB,KAAf,EAAsB;AACpB,sBAAM;AAAEkB,kBAAAA,IAAI,EAAE;AAAEQ,oBAAAA;AAAF,mBAAR;AAAmBI,kBAAAA;AAAnB,oBAA6B9B,KAAK,CAAC6B,IAAI,CAACT,EAAN,CAAxC;AAEA,uBAAOR,MAAM,GAAGmB,QAAQ,CAACL,KAAD,CAAR,GAAkBK,QAAQ,CAACD,KAAD,CAA1C;AACD;;AAED,qBAAOlB,MAAP;AACD,aARM,EAQJ,CARI,CALI;AAcXoB,YAAAA,IAAI,EAAG,UAAShB,IAAI,CAACI,EAAG,IAAGF,IAAI,CAACE,EAAG;AAdxB,WAAb;AAiBAR,UAAAA,MAAM,CAACqB,IAAP,CAAYZ,IAAZ;AACD;AACF,OArBD;AAsBD,KAvBD;AAyBA,WAAOT,MAAP;AACD,GAlC2B,EAkCzB,CAAEZ,KAAF,EAASC,aAAT,EAAwBC,SAAxB,CAlCyB,CAA5B;AAoCA,QAAMgC,cAAc,GAAGrC,OAAO,CAAC,MAAM;AACnC,UAAMS,gBAAgB,GAAGC,MAAM,CAACC,IAAP,CAAYP,aAAZ,EACtBQ,MADsB,CACfC,MAAM,IAAIT,aAAa,CAACS,MAAD,CAAb,KAA0B,QADrB,EAEtBC,GAFsB,CAElBD,MAAM,IAAIA,MAFQ,CAAzB;AAIA,UAAME,MAAM,GAAG,EAAf;AACA,UAAMC,eAAe,GAAG,IAAIC,GAAJ,CAAQR,gBAAR,CAAxB;AAEAJ,IAAAA,SAAS,CAACa,OAAV,CAAmBC,IAAD,IAAU;AAC1BA,MAAAA,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAmBG,IAAI,IAAI;AACzB,YAAIL,eAAe,CAACM,GAAhB,CAAoBD,IAAI,CAACE,EAAzB,CAAJ,EAAkC;AAChC,gBAAMC,IAAI,GAAG;AACXE,YAAAA,SAAS,EAAEP,IAAI,CAACQ,IADL;AAEXC,YAAAA,QAAQ,EAAEP,IAAI,CAACM,IAFJ;AAGXd,YAAAA,MAAM,EAAEQ,IAAI,CAACE,EAHF;AAIXM,YAAAA,KAAK,EAAER,IAAI,CAACS,KAAL,CAAWC,MAAX,CAAkB,CAAChB,MAAD,EAASiB,IAAT,KAAkB;AACzC,kBAAIA,IAAI,CAACT,EAAL,IAAWpB,KAAf,EAAsB;AACpB,sBAAM;AAAEkB,kBAAAA,IAAI,EAAE;AAAEQ,oBAAAA;AAAF,mBAAR;AAAmBI,kBAAAA;AAAnB,oBAA6B9B,KAAK,CAAC6B,IAAI,CAACT,EAAN,CAAxC;AAEA,uBAAOR,MAAM,GAAGmB,QAAQ,CAACL,KAAD,CAAR,GAAkBK,QAAQ,CAACD,KAAD,CAA1C;AACD;;AAED,qBAAOlB,MAAP;AACD,aARM,EAQJ,CARI,CAJI;AAaXoB,YAAAA,IAAI,EAAG,UAAShB,IAAI,CAACI,EAAG,IAAGF,IAAI,CAACE,EAAG;AAbxB,WAAb;AAgBAR,UAAAA,MAAM,CAACqB,IAAP,CAAYZ,IAAZ;AACD;AACF,OApBD;AAqBD,KAtBD;AAwBA,WAAOT,MAAP;AACD,GAjC6B,EAiC3B,CAAEZ,KAAF,EAASC,aAAT,EAAwBC,SAAxB,CAjC2B,CAA9B;AAmCA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,YAAY,CAACM,GAAb,CAAiBX,KAAK,iBACrB;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,GAAG,EAAEA,KAAK,CAACgC,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgChC,KAAK,CAACuB,SAAtC,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCvB,KAAK,CAACyB,QAAxC,CAFF,eAGE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAoCzB,KAAK,CAAC0B,KAA1C,wDAHF,CAJF,eASE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,eAYE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,EAAE,EAAG,UAAS1B,KAAK,CAACsB,OAAQ,IAAGtB,KAAK,CAACU,MAAO,EAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAZF,eAkBE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbyB,MAAAA,gBAAgB,CAAC;AAAEC,QAAAA,MAAM,EAAEpC,KAAK,CAACU;AAAhB,OAAD,CAAhB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAlBF,CADD,CADH,CADF,eAgCE;AAAI,IAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGwB,cAAc,CAACvB,GAAf,CAAmBX,KAAK,iBACvB;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,GAAG,EAAEA,KAAK,CAACgC,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6ChC,KAAK,CAACuB,SAAnD,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CvB,KAAK,CAACyB,QAArD,CAFF,eAGE;AAAG,IAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAiDzB,KAAK,CAAC0B,KAAvD,wDAHF,CAJF,eASE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbtB,MAAAA,cAAc,CAAC;AAAEgC,QAAAA,MAAM,EAAEpC,KAAK,CAACU;AAAhB,OAAD,CAAd;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,GAAG,EAAC,cAFN;AAGE,IAAA,GAAG,EAAE2B,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CATF,CADD,CADH,CAhCF,CADF;AA6DD,CArID;;AAuIAtC,MAAM,CAACuC,YAAP,GAAsB;AACpBnC,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CADN;AAEpBC,EAAAA,cAAc,EAAE,MAAM,CAAE;AAFJ,CAAtB;AAKA,eAAeL,MAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport refresh from '../img/refresh-button.svg';\nimport './orders.css';\n\n\nconst Orders = ({ order, orderStatuses, foodAreas, setFinishedOrder, setActiveOrder }) => {\n  const activeOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] === 'ACTIVE')\n      .map(shopId => shopId);\n\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeId: area.id,\n            placeName: area.name,\n            shopId: item.id,\n            shopName: item.name,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n\n  const finishedOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] !== 'ACTIVE')\n      .map(shopId => shopId);\n\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeName: area.name,\n            shopName: item.name,\n            shopId: item.id,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n\n  return (\n    <div className=\"Orders\">\n      <ul className=\"Orders__active-orders\">\n        {activeOrders.map(order => (\n          <li\n            className=\"Orders__active-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name\">{order.shopName}</p>\n              <p className=\"Orders__price\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <div className=\"Orders__time\">\n              ~ 15 М\n            </div>\n            <Link\n              className=\"Orders__change\"\n              to={`/place/${order.placeId}/${order.shopId}`}\n            >\n              Изм\n            </Link>\n            <Link\n              className=\"Orders__cancel\"\n              onClick={() => {\n                setCanceledOrder({ itemId: order.shopId });\n              }}\n            >\n              Отм.\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <ul className=\"Orders__finished-orders\">\n        {finishedOrders.map(order => (\n          <li\n            className=\"Orders__finished-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header Orders__dark\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name Orders__pink\">{order.shopName}</p>\n              <p className=\"Orders__price Orders__pink\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <button\n              className=\"Orders__repeat\"\n              onClick={() => {\n                setActiveOrder({ itemId: order.shopId });\n              }}\n            >\n              <img\n                className=\"Orders__refresh\"\n                alt=\"repeat order\"\n                src={refresh}\n              />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nOrders.defaultProps = {\n  setFinishedOrder: () => {},\n  setActiveOrder: () => {},\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}